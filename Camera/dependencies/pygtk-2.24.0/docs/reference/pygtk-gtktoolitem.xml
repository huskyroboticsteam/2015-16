<?xml version="1.0" standalone="no"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="class-gtktoolitem">
  <refnamediv>
    <refname>gtk.ToolItem</refname> <refpurpose>the base class of widgets
    that can be added to <link
    linkend="class-gtktoolbar"><classname>gtk.Toolbar</classname></link>
    (new in PyGTK 2.4)</refpurpose>
  </refnamediv>

  <refsect1>
    <title>Synopsis</title>

    <classsynopsis language="python">
      <ooclass><classname>gtk.ToolItem</classname></ooclass>
      <ooclass><classname><link linkend="class-gtkbin">gtk.Bin</link></classname></ooclass>
      <constructorsynopsis language="python">
	<methodname><link linkend="constructor-gtktoolitem">gtk.ToolItem</link></methodname>
	<methodparam></methodparam>
      </constructorsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--set-homogeneous">set_homogeneous</link></methodname>
	<methodparam><parameter role="keyword">homogeneous</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--get-homogeneous">get_homogeneous</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--set-expand">set_expand</link></methodname>
	<methodparam><parameter role="keyword">expand</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--get-expand">get_expand</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--set-tooltip">set_tooltip</link></methodname>
	<methodparam><parameter role="keyword">tooltips</parameter></methodparam>
	<methodparam><parameter role="keyword">tip_text</parameter><initializer>None</initializer></methodparam>
	<methodparam><parameter role="keyword">tip_private</parameter><initializer>None</initializer></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--set-use-drag-window">set_use_drag_window</link></methodname>
	<methodparam><parameter role="keyword">use_drag_window</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--get-use-drag-window">get_use_drag_window</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--set-visible-horizontal">set_visible_horizontal</link></methodname>
	<methodparam><parameter role="keyword">visible_horizontal</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--get-visible-horizontal">get_visible_horizontal</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--set-visible-vertical">set_visible_vertical</link></methodname>
	<methodparam><parameter role="keyword">visible_vertical</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--get-visible-vertical">get_visible_vertical</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--set-is-important">set_is_important</link></methodname>
	<methodparam><parameter role="keyword">is_important</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--get-is-important">get_is_important</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--get-icon-size">get_icon_size</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--get-orientation">get_orientation</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--get-toolbar-style">get_toolbar_style</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--get-relief-style">get_relief_style</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--retrieve-proxy-menu-item">retrieve_proxy_menu_item</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--set-proxy-menu-item">set_proxy_menu_item</link></methodname>
	<methodparam><parameter role="keyword">menu_item_id</parameter></methodparam>
	<methodparam><parameter role="keyword">menu_item</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--get-proxy-menu-item">get_proxy_menu_item</link></methodname>
	<methodparam><parameter role="keyword">menu_item_id</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--rebuild-menu">rebuild_menu</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--set-tooltip-markup">set_tooltip_markup</link></methodname>
	<methodparam><parameter role="keyword">markup</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--set-tooltip-text">set_tooltip_text</link></methodname>
	<methodparam><parameter role="keyword">text</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gtktoolitem--toolbar-reconfigured">toolbar_reconfigured</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-gtktoolitem--get-ellipsize-mode">get_ellipsize_mode</link></methodname>
        <methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-gtktoolitem--get-text-alignment">get_text_alignment</link></methodname>
        <methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-gtktoolitem--get-text-orientation">get_text_orientation</link></methodname>
        <methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-gtktoolitem--get-text-size-group">get_text_size_group</link></methodname>
        <methodparam></methodparam>
      </methodsynopsis>
    </classsynopsis>

  </refsect1>

  <refsect1>
    <title>Ancestry</title>

<synopsis>+-- <link linkend="class-gobject">gobject.GObject</link>
  +-- <link linkend="class-gtkobject">gtk.Object</link>
    +-- <link linkend="class-gtkwidget">gtk.Widget</link>
      +-- <link linkend="class-gtkcontainer">gtk.Container</link>
        +-- <link linkend="class-gtkbin">gtk.Bin</link>
          +-- <link linkend="class-gtktoolitem">gtk.ToolItem</link>
</synopsis>

  </refsect1>
  
  <refsect1>
		<title>Implemented Interfaces</title>
		<para>
			<link linkend="class-gtktoolitem"><classname>gtk.ToolItem</classname></link>
			implements 
			<link linkend="class-gtkbuildable"><classname>gtk.Buildable</classname></link>
		</para>
	</refsect1>


  <refsect1 id="properties-gtktoolitem">
    <title>gtk.ToolItem Properties</title>

    <para><link linkend="properties-gtkobject">gtk.Object Properties</link></para>
    <para><link linkend="properties-gtkwidget">gtk.Widget Properties</link></para>
    <para><link linkend="properties-gtkcontainer">gtk.Container Properties</link></para>

      <note>
	<para>These properties are available in GTK+ 2.4 and above.</para>
      </note>

    <blockquote role="properties">
      <informaltable pgwide="1" frame="none">
	<tgroup cols="3">
	  <colspec column="1" colwidth="1in"/>
	  <colspec column="2" colwidth="1in"/>
	  <colspec column="3" colwidth="4in"/>
	  <tbody>

	    <row valign="top">
	      <entry>"is-important"</entry>
	      <entry>Read-Write</entry>

	      <entry>If <literal>True</literal>, the toolbar item is
considered important and the toolbar buttons show text in
<literal>gtk.TOOLBAR_BOTH_HORIZ</literal> mode. Default value:
<literal>False</literal></entry>
	    </row>

	    <row valign="top">
	      <entry>"visible-horizontal"</entry>
	      <entry>Read-Write</entry>

	      <entry>If <literal>True</literal>, the toolbar item is visible
when the toolbar is in a horizontal orientation. Default value:
<literal>True</literal></entry>
	    </row>

	    <row valign="top">
	      <entry>"visible-vertical"</entry>
	      <entry>Read-Write</entry>

	      <entry>If <literal>True</literal>, the toolbar item is visible
when the toolbar is in a vertical orientation. Default value:
<literal>True</literal></entry>
	    </row>

	  </tbody>
	</tgroup>
      </informaltable>
    </blockquote>

  </refsect1>

  <refsect1 id="style-properties-gtktoolitem">
    <title>gtk.ToolItem Style Properties</title>

    <para><link linkend="style-properties-gtkwidget">gtk.Widget Style Properties</link></para>

  </refsect1>

  <refsect1 id="signal-prototypes-gtktoolitem">
    <title>gtk.ToolItem Signal Prototypes</title>

    <para><link linkend="signal-prototypes-gobject">gobject.GObject Signal Prototypes</link></para>
    <para><link linkend="signal-prototypes-gtkobject">gtk.Object Signal Prototypes</link></para>
    <para><link linkend="signal-prototypes-gtkwidget">gtk.Widget Signal Prototypes</link></para>
    <para><link linkend="signal-prototypes-gtkcontainer">gtk.Container Signal Prototypes</link></para>

    <variablelist>
      <varlistentry>
        <term>"<link linkend="signal-gtktoolitem--create-menu-proxy">create-menu-proxy</link>"</term>
        <listitem>
          <methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>toolitem</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"<link linkend="signal-gtktoolitem--set-tooltip">set-tooltip</link>"</term>
        <listitem>
          <methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>toolitem</parameter></methodparam>
            <methodparam><parameter>tooltips</parameter></methodparam>
            <methodparam><parameter>tip_text</parameter></methodparam>
            <methodparam><parameter>tip_private</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"<link linkend="signal-gtktoolitem--toolbar-reconfigured">toolbar-reconfigured</link>"</term>
        <listitem>
          <methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>toolitem</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis>
        </listitem>
      </varlistentry>
    </variablelist>

  </refsect1>

  <refsect1>
    <title>Description</title>

    <note>
      <para>This widget is available in PyGTK 2.4 and above.</para>
    </note>

    <para>A <link
linkend="class-gtktoolitem"><classname>gtk.ToolItem</classname></link> is a
widget that can appear on a <link
linkend="class-gtktoolbar"><classname>gtk.Toolbar</classname></link>. To
create a toolbar item that contains something else than a button, use the
<link linkend="constructor-gtktoolitem">gtk.ToolItem</link>() constructor
then use the <link
linkend="method-gtkcontainer--add"><methodname>gtk.Container.add</methodname>()</link>
method to add a child widget to the tool item.</para>

    <para>To create and use toolbar items that contain buttons, see the
<link
linkend="class-gtktoolbutton"><classname>gtk.ToolButton</classname></link>,
<link
linkend="class-gtktoggletoolbutton"><classname>gtk.ToggleToolButton</classname></link>
and <link
linkend="class-gtkradiotoolbutton"><classname>gtk.RadioToolButton</classname></link>
classes.  See the <link
linkend="class-gtktoolbar"><classname>gtk.Toolbar</classname></link> class
for a description of the toolbar widget.</para>

  </refsect1>

  <refsect1 id="constructor-gtktoolitem">
    <title>Constructor</title>

    <programlisting><constructorsynopsis language="python">
	<methodname>gtk.ToolItem</methodname>
	<methodparam></methodparam>
      </constructorsynopsis></programlisting>
    <variablelist>
      <varlistentry>
	<term><emphasis>Returns</emphasis>&nbsp;:</term>
	<listitem><simpara>the new <link
	linkend="class-gtktoolitem"><classname>gtk.ToolItem</classname></link></simpara></listitem>
      </varlistentry>
    </variablelist>

    <note>
      <para>This constructor is available in PyGTK 2.4 and above.</para>
    </note>

    <para>Creates a new empty <link
linkend="class-gtktoolitem"><classname>gtk.ToolItem</classname></link></para>

  </refsect1>

  <refsect1>
    <title>Methods</title>

    <refsect2 id="method-gtktoolitem--set-homogeneous">
      <title>gtk.ToolItem.set_homogeneous</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_homogeneous</methodname>
	  <methodparam><parameter role="keyword">homogeneous</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter
	  role="keyword">homogeneous</parameter>&nbsp;:</term>
	  <listitem><simpara>if <literal>True</literal> the tool item is the
	  same size as other homogeneous items</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>set_homogeneous</methodname>() method sets the
homogeneous setting of the tool item to the value of
<parameter>homogeneous</parameter>. If <parameter>homogeneous</parameter> is
<literal>True</literal> the tool item is to be allocated the same size as
other homogeneous items. The effect is that all homogeneous items will have
the same width as the widest of the items.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--get-homogeneous">
      <title>gtk.ToolItem.get_homogeneous</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_homogeneous</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara><literal>True</literal> if the item is the same
	  size as other homogeneous items.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>get_homogeneous</methodname>() method returns
the setting of the homogeneous setting of the tool item. If
<literal>True</literal> the tool item is the same size as other homogeneous
items. See the <link
linkend="method-gtktoolitem--set-homogeneous"><methodname>set_homogeneous()</methodname></link>
method for more detail.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--set-expand">
      <title>gtk.ToolItem.set_expand</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_expand</methodname>
	  <methodparam><parameter role="keyword">expand</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">expand</parameter>&nbsp;:</term>
	  <listitem><simpara>If <literal>True</literal> the tool item is
	  allocated extra space when available</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>set_expand</methodname>() method sets the expand
setting of the tool item to the value of <parameter>expand</parameter>. If
<parameter>expand</parameter> is <literal>True</literal> the tool item is
allocated extra space when there is more room on the toolbar than needed for
the items. The effect is that the item gets bigger when the toolbar gets
bigger and smaller when the toolbar gets smaller.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--get-expand">
      <title>gtk.ToolItem.get_expand</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_expand</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara><literal>True</literal> if the tool item is
	  allocated extra space when available.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>get_expand</methodname>() method returns the
value of the expand setting of the tool item. If <literal>True</literal> the
tool item is allocated extra space.  See the <link
linkend="method-gtktoolitem--set-expand"><methodname>gtk.ToolItem.set_expand()</methodname></link>
method for more detail.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--set-tooltip">
      <title>gtk.ToolItem.set_tooltip</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_tooltip</methodname>
	  <methodparam><parameter role="keyword">tooltips</parameter></methodparam>
	  <methodparam><parameter role="keyword">tip_text</parameter><initializer>None</initializer></methodparam>
	  <methodparam><parameter role="keyword">tip_private</parameter><initializer>None</initializer></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">tooltips</parameter>&nbsp;:</term>
	  <listitem><simpara>The <link
	  linkend="class-gtktooltips"><classname>gtk.Tooltips</classname></link>
	  object to be used</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter role="keyword">tip_text</parameter>&nbsp;:</term>
	  <listitem><simpara>the text to be used as tooltip text for the
	  tool item or <literal>None</literal></simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter
	  role="keyword">tip_private</parameter>&nbsp;:</term>
	  <listitem><simpara>the text to be used as private tooltip
	  text or <literal>None</literal></simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>set_tooltip</methodname>() method sets the <link
linkend="class-gtktooltips"><classname>gtk.Tooltips</classname></link>
object specified by <parameter>tooltips</parameter> to be used for the tool
item with the tooltip text specified by <parameter>tip_text</parameter> and
the private text specified by <parameter>tip_private</parameter>. See the
<link
linkend="method-gtktooltips--set-tip"><methodname>gtk.Tooltips.set_tip()</methodname></link>
method for more information.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--set-use-drag-window">
      <title>gtk.ToolItem.set_use_drag_window</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_use_drag_window</methodname>
	  <methodparam><parameter role="keyword">use_drag_window</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter
	  role="keyword">use_drag_window</parameter>&nbsp;:</term>
	  <listitem><simpara>if <literal>True</literal> the tool item has a
	  drag window.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>set_use_drag_window</methodname>() method
determines whether the tool item has a drag window according to the value of
<parameter>use_drag_window</parameter>. If
<parameter>use_drag_window</parameter> is <literal>True</literal> the
toolitem can be used as a drag source through the <link
linkend="method-gtkwidget--drag-source-set"><methodname>gtk.Widget.drag_source_set()</methodname></link>
method.  When the tool item has a drag window it will intercept all events,
even those that would otherwise be sent to a child of the tool item</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--get-use-drag-window">
      <title>gtk.ToolItem.get_use_drag_window</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_use_drag_window</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara><literal>True</literal> if the tool item uses a
	  drag window.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>get_use_drag_window</methodname>() returns the
setting that determines if the tool item has a drag window. See the <link
linkend="method-gtktoolitem--set-use-drag-window"><methodname>set_use_drag_window()</methodname></link>
for more information.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--set-visible-horizontal">
      <title>gtk.ToolItem.set_visible_horizontal</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_visible_horizontal</methodname>
	  <methodparam><parameter role="keyword">visible_horizontal</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter
	  role="keyword">visible_horizontal</parameter>&nbsp;:</term>
	  <listitem><simpara>if <literal>True</literal> the tool item is
	  visible when in horizontal mode</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>set_visible_horizontal</methodname>() method
sets the "visible-horizontal" property to the value of
<parameter>visible_horizontal</parameter>. If
<parameter>visible_horizontal</parameter> is <literal>True</literal>, the
tool item is visible when the toolbar is docked horizontally.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--get-visible-horizontal">
      <title>gtk.ToolItem.get_visible_horizontal</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_visible_horizontal</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara><literal>True</literal> if the tool item is
	  visible on toolbars that are docked
	  horizontally.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>get_visible_horizontal</methodname>() method
returns the value of the "visible-horizontal" property. If
"visible-horizontal" is <literal>True</literal>, the tool item is visible on
toolbars that are docked horizontally.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--set-visible-vertical">
      <title>gtk.ToolItem.set_visible_vertical</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_visible_vertical</methodname>
	  <methodparam><parameter role="keyword">visible_vertical</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter
	  role="keyword">visible_vertical</parameter>&nbsp;:</term>
	  <listitem><simpara>if <literal>True</literal>, the tool item is
	  visible when the toolbar is in vertical mode</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>set_visible_vertical</methodname>() method sets
the "visible-vertical" property to the value of
<parameter>visible_vertical</parameter>. If
<parameter>visible_vertical</parameter> is <literal>True</literal>, the tool
item is visible when the toolbar is docked vertically. Some tool items, such
as text entries, are too wide to be useful on a vertically docked
toolbar. If <parameter>visible_vertical</parameter> is
<literal>False</literal> the tool item will not appear on toolbars that are
docked vertically.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--get-visible-vertical">
      <title>gtk.ToolItem.get_visible_vertical</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_visible_vertical</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>True if the tool item is visible when the
	  toolbar is docked vertically</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>get_visible_vertical</methodname>() method
returns the value of the "visible-vertical" property. If "visible-vertical"
is <literal>True</literal>, the tool item is visible when the toolbar is
docked vertically.  See the <link
linkend="method-gtktoolitem--set-visible-vertical"><methodname>set_visible_vertical()</methodname></link>
method for more information.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--set-is-important">
      <title>gtk.ToolItem.set_is_important</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_is_important</methodname>
	  <methodparam><parameter role="keyword">is_important</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter
	  role="keyword">is_important</parameter>&nbsp;:</term>
	  <listitem><simpara>if <literal>True</literal>, the tool item
	  should be considered important</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>set_is_important</methodname>() method sets the
"is-important" property to the value of
<parameter>is_important</parameter>. If <parameter>is_important</parameter>
is <literal>True</literal> the tool item should be considered important. The
<link
linkend="class-gtktoolbutton"><classname>gtk.ToolButton</classname></link>
class uses this property to determine whether to show its label when the
toolbar style is <literal>gtk.TOOLBAR_BOTH_HORIZ</literal>. The result is
that only tool buttons with the "is_important" property set have labels, an
effect known as "priority text".</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--get-is-important">
      <title>gtk.ToolItem.get_is_important</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_is_important</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara><literal>True</literal> if the tool item is
	  considered important.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>get_is_important</methodname>() method returns
the value of the "is-important" property. If "is-important" is
<literal>True</literal>, the tool item is considered important. See the
<link
linkend="method-gtktoolitem--set-is-important"><methodname>set_is_important()</methodname></link>
method for more information.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--get-icon-size">
      <title>gtk.ToolItem.get_icon_size</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_icon_size</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the icon size used for the tool
	  item</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>get_icon_size</methodname>() method returns the
icon size used for the tool item. Custom subclasses of <link
linkend="class-gtktoolitem"><classname>gtk.ToolItem</classname></link>
should call this method to find out what size icons they should use. The
return value should be one of: <literal>gtk.ICON_SIZE_MENU</literal>,
<literal>gtk.ICON_SIZE_SMALL_TOOLBAR</literal>,
<literal>gtk.ICON_SIZE_LARGE_TOOLBAR</literal>,
<literal>gtk.ICON_SIZE_BUTTON</literal>,
<literal>gtk.ICON_SIZE_DND</literal>,
<literal>gtk.ICON_SIZE_DIALOG</literal> or an integer value returned from
the <link
linkend="function-gtk--icon-size-register"><function>gtk.icon_size_register</function>()</link>
function.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--get-orientation">
      <title>gtk.ToolItem.get_orientation</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_orientation</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the orientation used for the tool
	  item</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>get_orientation</methodname>() method returns
the orientation used for the tool item. Custom subclasses of <link
linkend="class-gtktoolitem"><classname>gtk.ToolItem</classname></link>
should call this method to find out what size icons they should use. The
return value should be either <literal>gtk.ORIENTATION_HORIZONTAL</literal>
or <literal>gtk.ORIENTATION_VERTICAL</literal>.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--get-toolbar-style">
      <title>gtk.ToolItem.get_toolbar_style</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_toolbar_style</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the toolbar style used for the tool
	  item</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>get_toolbar_style</methodname>() method returns
the toolbar style used for the tool item. Custom subclasses of <link
linkend="class-gtktoolitem"><classname>gtk.ToolItem</classname></link>
should call this method in the "<link
linkend="signal-gtktoolitem--toolbar-reconfigured">toolbar-reconfigured</link>"
signal handler to find out in what style the toolbar is displayed and change
themselves accordingly.</para>

      <para>Possibilities are:</para>

      <itemizedlist>
	<listitem>
	  <para><literal>gtk.TOOLBAR_BOTH</literal>, meaning the tool item
should show both an icon and a label, stacked vertically</para>
	</listitem>
	<listitem>
	  <para><literal>gtk.TOOLBAR_ICONS</literal>, meaning the toolbar
shows only icons</para>
	</listitem>
	<listitem>
	    <para><literal>gtk.TOOLBAR_TEXT</literal>, meaning the tool item
should only show text</para>
	</listitem>
	<listitem>
	  <para><literal>gtk.TOOLBAR_BOTH_HORIZ</literal>, meaning the tool
item should show both an icon and a label, arranged horizontally..</para>
	</listitem>
      </itemizedlist>

    </refsect2>

    <refsect2 id="method-gtktoolitem--get-relief-style">
      <title>gtk.ToolItem.get_relief_style</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_relief_style</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the relief style used for the tool
	  item</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>get_relief_style</methodname>() method returns
the relief style of the tool item. See the <link
linkend="method-gtkbutton--set-relief"><methodname>gtk.Button.set_relief</methodname>()</link>
method for more information. Custom subclasses of <link
linkend="class-gtktoolitem"><classname>gtk.ToolItem</classname></link>
should call this method in the handler of the <link
linkend="class-gtktoolitem"><classname>gtk.ToolItem</classname></link>
"<link
linkend="signal-gtktoolitem--toolbar-reconfigured">toolbar-reconfigured</link>"
signal to find out the relief style of buttons.</para>

      <para>The return value should be one of:
<literal>gtk.RELIEF_NORMAL</literal>, <literal>gtk.RELIEF_HALF</literal> or
<literal>gtk.RELIEF_NONE</literal>.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--retrieve-proxy-menu-item">
      <title>gtk.ToolItem.retrieve_proxy_menu_item</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>retrieve_proxy_menu_item</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>The <link linkend="class-gtkmenuitem"><classname>gtk.MenuItem</classname></link> that is going to appear in the
overflow menu for the tool item</simpara></listitem>
	</varlistentry>
      </variablelist>
 
      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>retrieve_proxy_menu_item</methodname>() method
returns the <link
linkend="class-gtkmenuitem"><classname>gtk.MenuItem</classname></link> that
was last set by the <link
linkend="method-gtktoolitem--set-proxy-menu-item"><methodname>set_proxy_menu_item()</methodname></link>
method, i.e. the <link
linkend="class-gtkmenuitem"><classname>gtk.MenuItem</classname></link> that
is going to appear in the overflow menu.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--set-proxy-menu-item">
      <title>gtk.ToolItem.set_proxy_menu_item</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_proxy_menu_item</methodname>
	  <methodparam><parameter role="keyword">menu_item_id</parameter></methodparam>
	  <methodparam><parameter role="keyword">menu_item</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter
	  role="keyword">menu_item_id</parameter>&nbsp;:</term>
	  <listitem><simpara>a string used to identify
	  <parameter>menu_item</parameter></simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter
	  role="keyword">menu_item</parameter>&nbsp;:</term>
	  <listitem><simpara>a <link
	  linkend="class-gtkmenuitem"><classname>gtk.MenuItem</classname></link>
	  to be used in the overflow menu or
	  <literal>None</literal></simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>set_proxy_menu_item</methodname>() method sets
the <link
linkend="class-gtkmenuitem"><classname>gtk.MenuItem</classname></link>
specified by <parameter>menu_item</parameter> to be used in the toolbar
overflow menu.  <parameter>menu_item_id</parameter> is used to identify the
caller of this method and should also be used with the <link
linkend="method-gtktoolitem--get-proxy-menu-item"><methodname>get_proxy_menu_item()</methodname></link>
method. If <parameter>menu_item</parameter> is <literal>None</literal> the
tool item will not appear in the overflow menu.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--get-proxy-menu-item">
      <title>gtk.ToolItem.get_proxy_menu_item</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_proxy_menu_item</methodname>
	  <methodparam><parameter role="keyword">menu_item_id</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter
	  role="keyword">menu_item_id</parameter>&nbsp;:</term>
	  <listitem><simpara>a string used to identify the menu
	  item</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>The <link
	  linkend="class-gtkmenuitem"><classname>gtk.MenuItem</classname></link>
	  matching <parameter>menu_item_id</parameter>.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>get_proxy_menu_item</methodname>() method
returns the <link
linkend="class-gtkmenuitem"><classname>gtk.MenuItem</classname></link>
corresponding to the string specified by <parameter>menu_item_id</parameter>
as passed to the <link
linkend="method-gtktoolitem--set-proxy-menu-item"><methodname>set_proxy_menu_item()</methodname></link>
method.</para>

      <para>Custom subclasses of <link
linkend="class-gtktoolitem"><classname>gtk.ToolItem</classname></link>
should use this method to update their menu item when the <link
linkend="class-gtktoolitem"><classname>gtk.ToolItem</classname></link>
changes. Forcing a match with <parameter>menu_item_id</parameter> ensures
that a <link
linkend="class-gtktoolitem"><classname>gtk.ToolItem</classname></link> will
not inadvertently change a menu item that they did not create.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--rebuild-menu">
      <title>gtk.ToolItem.rebuild_menu</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>rebuild_menu</methodname>
	</methodsynopsis></programlisting>

      <note>
	<para>This method is available in PyGTK 2.6 and above.</para>
      </note>

      <para>The <methodname>rebuild_menu</methodname>() method ignals to the
toolbar that the overflow menu item has changed. If the overflow menu is
visible when this method it called, the menu will be rebuilt. The method
must be called when the tool item changes what it will do in response to the
"create_menu_proxy" signal.</para>

    </refsect2>
    
    <refsect2 id="method-gtktoolitem--set-tooltip-markup">
      <title>gtk.ToolItem.set_tooltip_markup</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_tooltip_markup</methodname>
	  <methodparam><parameter role="keyword">markup</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">markup</parameter>&nbsp;:</term>
	  <listitem><simpara>markup text to be used as tooltip.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.12 and above.</para>
      </note>

      <para>The <methodname>set_tooltip_markup</methodname>() method sets the
      markup text to be displayed as tooltip on the item. See
      <methodname><link linkend="method-gtkwidget--set-tooltip-markup">gtk.Widget.set_tooltip_markup</link></methodname>().</para>

    </refsect2>
    
    <refsect2 id="method-gtktoolitem--set-tooltip-text">
      <title>gtk.ToolItem.set_tooltip_text</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_tooltip_text</methodname>
	  <methodparam><parameter role="keyword">text</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">markup</parameter>&nbsp;:</term>
	  <listitem><simpara>the text to be used as tooltip.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.12 and above.</para>
      </note>

      <para>The <methodname>set_tooltip_text</methodname>() method sets the
      text to be displayed as tooltip on the item. See
      <methodname><link linkend="method-gtkwidget--set-tooltip-text">gtk.Widget.set_tooltip_text</link></methodname>().</para>

    </refsect2>
    
    <refsect2 id="method-gtktoolitem--toolbar-reconfigured">
      <title>gtk.ToolItem.toolbar_reconfigured</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>toolbar_reconfigured</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.14 and above.</para>
      </note>

      <para>
	The <methodname>toolbar_reconfigured</methodname>() method emits the signal
	"<link linkend="signal-gtktoolitem--toolbar-reconfigured">toolbar-reconfigured</link>"
	on tool_item.
	<link linkend="class-gtktoolbar"><classname>gtk.ToolBar</classname></link>
	and other
	<link linkend="class-gtktoolshell"><classname>gtk.ToolShell</classname></link>
	implementations use this method to notify children, when some aspect of their configuration changes.
      </para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--get-ellipsize-mode">
      <title>gtk.ToolItem.get_ellipsize_mode</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_ellipsize_mode</methodname>
        <methodparam></methodparam>
      </methodsynopsis></programlisting>
      <variablelist>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>one of the <xref linkend="pango-ellipsize-mode-constants" endterm="pango-ellipsize-mode-constants-title"></xref>
          indicating how text should be ellipsized.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <note>
        <para>This method is available in PyGTK 2.22 and above.</para>
      </note>

      <para>The <methodname>get_ellipsize_mode</methodname>() method returns the ellipsize mode used
      for the tool item. Custom subclasses of <link linkend="class-gtktoolitem"><classname>gtk.ToolItem</classname></link>
      should call this method to find out how text should be ellipsized.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--get-text-alignment">
      <title>gtk.ToolItem.get_text_alignment</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_text_alignment</methodname>
        <methodparam></methodparam>
      </methodsynopsis></programlisting>
      <variablelist>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the horizontal text alignment used for the tool item.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <note>
        <para>This method is available in PyGTK 2.22 and above.</para>
      </note>

      <para>The <methodname>get_text_alignment</methodname>() method returns the text alignment used
      for the tool item. Custom subclasses of <link linkend="class-gtktoolitem"><classname>gtk.ToolItem</classname></link>
      should call this method to find out how text should be aligned.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--get-text-orientation">
      <title>gtk.ToolItem.get_text_orientation</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_text_orientation</methodname>
        <methodparam></methodparam>
      </methodsynopsis></programlisting>
      <variablelist>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the text orientation used for the tool item.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <note>
        <para>This method is available in PyGTK 2.22 and above.</para>
      </note>

      <para>The <methodname>get_text_orientation</methodname>() method returns the text orientation used
      for the tool item. Custom subclasses of <link linkend="class-gtktoolitem"><classname>gtk.ToolItem</classname></link>
      should call this method to find out how text should be orientated.</para>

    </refsect2>

    <refsect2 id="method-gtktoolitem--get-text-size-group">
      <title>gtk.ToolItem.get_text_size_group</title>

      <programlisting><methodsynopsis language="python">
        <methodname>get_text_size_group</methodname>
        <methodparam></methodparam>
      </methodsynopsis></programlisting>
      <variablelist>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>a <link linkend="class-gtksizegroup"><classname>gtk.SizeGroup</classname></link>.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <note>
        <para>This method is available in PyGTK 2.22 and above.</para>
      </note>

      <para>The <methodname>get_text_size_group</methodname>() method returns the size group used for labels
      in the tool item. Custom subclasses of <link linkend="class-gtktoolitem"><classname>gtk.ToolItem</classname></link>
      should call this method and use the size group for labels.</para>

    </refsect2>

  </refsect1>

  <refsect1>
    <title>Signals</title>

    <refsect2 id="signal-gtktoolitem--create-menu-proxy">
      <title>The "create-menu-proxy" gtk.ToolItem Signal</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>callback</methodname>
	  <methodparam><parameter>toolitem</parameter></methodparam>
	  <methodparam><parameter>user_param1</parameter></methodparam>
	  <methodparam><parameter>...</parameter></methodparam>
	</methodsynopsis></programlisting>

      <variablelist>
	<varlistentry>
	  <term><parameter>toolitem</parameter>&nbsp;:</term>
	  <listitem><simpara>the toolitem that received the
signal</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>user_param1</parameter>&nbsp;:</term>
          <listitem><simpara>the first user parameter (if any) specified
with the <link
linkend="method-gobject--connect"><methodname>connect</methodname>()</link>
method</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>...</parameter>&nbsp;:</term>
	  <listitem><simpara>additional user parameters (if
any)</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara><literal>True</literal> if the signal was
	  handled</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This signal is available in GTK+ 2.4 and above.</para>
      </note>

      <para>The "create-menu-proxy" signal is emitted when the toolbar is
displaying an overflow menu and is trying to determine if
<parameter>toolitem</parameter> should appear in the overflow menu. In
response <parameter>toolitem</parameter> should either</para>

      <itemizedlist>
	<listitem>
	  <para>call the <link
linkend="method-gtktoolitem--set-proxy-menu-item"><methodname>set_proxy_menu_item</methodname>()</link>
method specifying <parameter>menu_item</parameter> as
<literal>None</literal> and return <literal>True</literal> to indicate that
the item should not appear in the overflow menu</para>
	</listitem>
    	<listitem>
	  <para>call the <link
linkend="method-gtktoolitem--set-proxy-menu-item"><methodname>set_proxy_menu_item</methodname>()</link>
method with a new menu item and return <literal>True</literal>, or</para>
	</listitem>
	<listitem>
	  <para>return <literal>False</literal> to indicate that the signal
was not handled by the item. This means that the item will not appear in the
overflow menu unless a later handler installs a menu item.</para>
	</listitem>
      </itemizedlist>

      <para>The toolbar may cache the result of this signal. When the tool
item changes how it will respond to this signal it must call the <link
linkend="method-gtktoolitem--rebuild-menu"><methodname>rebuild_menu</methodname>()</link>)
method to invalidate the cache and ensure that the toolbar rebuilds its
overflow menu.</para>

    </refsect2>

    <refsect2 id="signal-gtktoolitem--set-tooltip">
      <title>The "set-tooltip" gtk.ToolItem Signal</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>callback</methodname>
	  <methodparam><parameter>toolitem</parameter></methodparam>
	  <methodparam><parameter>tooltips</parameter></methodparam>
	  <methodparam><parameter>tip_text</parameter></methodparam>
	  <methodparam><parameter>tip_private</parameter></methodparam>
	  <methodparam><parameter>user_param1</parameter></methodparam>
	  <methodparam><parameter>...</parameter></methodparam>
	</methodsynopsis></programlisting>

      <variablelist>
	<varlistentry>
	  <term><parameter>toolitem</parameter>&nbsp;:</term>
	  <listitem><simpara>the toolitem that received the
signal</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>tooltips</parameter>&nbsp;:</term>
	  <listitem><simpara>the <link
	  linkend="class-gtktooltips"><classname>gtk.Tooltips</classname></link></simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>tip_text</parameter>&nbsp;:</term>
	  <listitem><simpara>the tooltip text</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>tip_private</parameter>&nbsp;:</term>
	  <listitem><simpara>the tooltip private text</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>user_param1</parameter>&nbsp;:</term>
          <listitem><simpara>the first user parameter (if any) specified
with the <link
linkend="method-gobject--connect"><methodname>connect</methodname>()</link>
method</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>...</parameter>&nbsp;:</term>
	  <listitem><simpara>additional user parameters (if
any)</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara><literal>True</literal> if the signal was
	  handled</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This signal is available in GTK+ 2.4 and above.</para>
      </note>

      <para>The "set-tooltip" signal is emitted when the tool item's tooltip
changes. Application developers can use the <link
linkend="method-gtktoolitem--set-tooltip"><methodname>set_tooltip</methodname>()</link>
method to set the item's tooltip.</para>

    </refsect2>

    <refsect2 id="signal-gtktoolitem--toolbar-reconfigured">
      <title>The "toolbar-reconfigured" gtk.ToolItem Signal</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>callback</methodname>
	  <methodparam><parameter>toolitem</parameter></methodparam>
	  <methodparam><parameter>user_param1</parameter></methodparam>
	  <methodparam><parameter>...</parameter></methodparam>
	</methodsynopsis></programlisting>

      <variablelist>
	<varlistentry>
	  <term><parameter>toolitem</parameter>&nbsp;:</term>
	  <listitem><simpara>the toolitem that received the
signal</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>user_param1</parameter>&nbsp;:</term>
          <listitem><simpara>the first user parameter (if any) specified
with the <link
linkend="method-gobject--connect"><methodname>connect</methodname>()</link>
method</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>...</parameter>&nbsp;:</term>
	  <listitem><simpara>additional user parameters (if
any)</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This signal is available in GTK+ 2.4 and above.</para>
      </note>

      <para>The "toolbar-reconfigured" signal is emitted when some property
of the toolbar that the item is a child of changes. For custom subclasses of
<link
linkend="class-gtktoolitem"><classname>gtk.ToolItem</classname></link>, the
default handler of this signal uses the methods:</para>

      <itemizedlist>
	<listitem>
	  <simpara><link
linkend="method-gtktoolbar--get-orientation"><methodname>gtk.Toolbar.get_orientation</methodname>()</link></simpara>
	</listitem>
	<listitem>
	  <simpara><link
linkend="method-gtktoolbar--get-style"><methodname>gtk.Toolbar.get_style</methodname>()</link></simpara>
	</listitem>
	<listitem>
	  <simpara><link
linkend="method-gtktoolbar--get-icon-size"><methodname>gtk.Toolbar.get_icon_size</methodname>()</link></simpara>
	</listitem>
	<listitem>
	  <simpara><link
linkend="method-gtktoolbar--get-relief-style"><methodname>gtk.Toolbar.get_relief_style</methodname>()</link></simpara>
	</listitem>
      </itemizedlist>

	  <para>to find out what the toolbar should look like and change
themselves accordingly.</para>

    </refsect2>

  </refsect1>

</refentry>
