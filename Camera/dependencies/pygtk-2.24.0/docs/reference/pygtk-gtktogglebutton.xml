<?xml version="1.0" standalone="no"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<refentry id="class-gtktogglebutton">
  <refnamediv>
    <refname>gtk.ToggleButton</refname>
    <refpurpose>a button that retains its state</refpurpose>
  </refnamediv>

  <refsect1>
    <title>Synopsis</title>

    <classsynopsis language="python">
      <ooclass><classname>gtk.ToggleButton</classname></ooclass>
      <ooclass><classname><link
linkend="class-gtkbutton">gtk.Button</link></classname></ooclass>
      <constructorsynopsis language="python">
	<methodname><link
linkend="constructor-gtktogglebutton">gtk.ToggleButton</link></methodname>
	<methodparam><parameter role="keyword">label</parameter>
	  <initializer>None</initializer></methodparam>
	<methodparam><parameter role="keyword">use_underline</parameter>
	  <initializer>True</initializer></methodparam>
      </constructorsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-gtktogglebutton--set-mode">set_mode</link></methodname>
	<methodparam><parameter
		       role="keyword">draw_indicator</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-gtktogglebutton--get-mode">get_mode</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-gtktogglebutton--set-active">set_active</link></methodname>
	<methodparam><parameter
		       role="keyword">is_active</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-gtktogglebutton--get-active">get_active</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-gtktogglebutton--toggled">toggled</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-gtktogglebutton--set-inconsistent">set_inconsistent</link></methodname>
	<methodparam><parameter
		       role="keyword">setting</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-gtktogglebutton--get-inconsistent">get_inconsistent</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
    </classsynopsis>

  </refsect1>

  <refsect1>
    <title>Ancestry</title>

<synopsis>+-- <link linkend="class-gobject">gobject.GObject</link>
  +-- <link linkend="class-gtkobject">gtk.Object</link>
    +-- <link linkend="class-gtkwidget">gtk.Widget</link>
      +-- <link linkend="class-gtkcontainer">gtk.Container</link>
        +-- <link linkend="class-gtkbin">gtk.Bin</link>
          +-- <link linkend="class-gtkbutton">gtk.Button</link>
            +-- <link linkend="class-gtktogglebutton">gtk.ToggleButton</link>
</synopsis>

  </refsect1>
  
  <refsect1>
		<title>Implemented Interfaces</title>
		<para>
			<link linkend="class-gtktogglebutton"><classname>gtk.ToggleButton</classname></link>
			implements 
			<link linkend="class-gtkbuildable"><classname>gtk.Buildable</classname></link>
		</para>
	</refsect1>

  <refsect1 id="properties-gtktogglebutton">
    <title>gtk.ToggleButton Properties</title>

    <para><link linkend="properties-gtkobject">gtk.Object Properties</link></para>
    <para><link linkend="properties-gtkwidget">gtk.Widget Properties</link></para>
    <para><link linkend="properties-gtkcontainer">gtk.Container Properties</link></para>
    <para><link linkend="properties-gtkbutton">gtk.Button Properties</link></para>

    <blockquote role="properties">
      <informaltable pgwide="1" frame="none">
	<tgroup cols="3">
	  <colspec column="1" colwidth="1in"/>
	  <colspec column="2" colwidth="1in"/>
	  <colspec column="3" colwidth="4in"/>
	  <tbody>

	    <row valign="top">
	      <entry>"active"</entry>
	      <entry>Read-Write</entry>
	      <entry>If <literal>True</literal>, the toggle button should be
pressed in.</entry>
	    </row>

	    <row valign="top">
	      <entry>"draw-indicator"</entry>
	      <entry>Read-Write</entry>
	      <entry>If <literal>True</literal>, the toggle part of the
button is displayed.</entry>
	    </row>

	    <row valign="top">
	      <entry>"inconsistent"</entry>
	      <entry>Read-Write</entry>
	      <entry>If <literal>True</literal>, the toggle button is in an
"in between" state.</entry>
	    </row>

	  </tbody>
	</tgroup>
      </informaltable>
    </blockquote>

  </refsect1>

  <refsect1 id="style-properties-gtktogglebutton">
    <title>gtk.ToggleButton Style Properties</title>

    <para><link linkend="style-properties-gtkwidget">gtk.Widget Style Properties</link></para>
    <para><link linkend="style-properties-gtkbutton">gtk.Button Style Properties</link></para>

  </refsect1>

  <refsect1>
    <title>Attributes</title>

    <blockquote role="properties">
      <informaltable pgwide="1" frame="none">
	<tgroup cols="3">
	<?dbhtml cellpadding="5"?>
	  <colspec column="1" colwidth="1in"/>
	  <colspec column="2" colwidth="1in"/>
	  <colspec column="3" colwidth="4in"/>
	  <tbody>

	    <row valign="top">
	      <entry>"draw_indicator"</entry>
	      <entry>Read</entry>
	      <entry>If <literal>True</literal>, the toggle part of the
button is displayed.</entry>
	    </row>

	  </tbody>
	</tgroup>
      </informaltable>
    </blockquote>

  </refsect1>

  <refsect1 id="signal-prototypes-gtktogglebutton">
    <title>gtk.ToggleButton Signal Prototypes</title>

    <para><link linkend="signal-prototypes-gobject">gobject.GObject Signal Prototypes</link></para>
    <para><link linkend="signal-prototypes-gtkobject">gtk.Object Signal Prototypes</link></para>
    <para><link linkend="signal-prototypes-gtkwidget">gtk.Widget Signal Prototypes</link></para>
    <para><link linkend="signal-prototypes-gtkcontainer">gtk.Container Signal Prototypes</link></para>
    <para><link linkend="signal-prototypes-gtkbutton">gtk.Button Signal Prototypes</link></para>

    <variablelist>
      <varlistentry>
        <term>"<link
linkend="signal-gtktogglebutton--toggled">toggled</link>"</term>
        <listitem>
          <methodsynopsis
	    language="python"><methodname>callback</methodname>
            <methodparam><parameter>togglebutton</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis>
        </listitem>
      </varlistentry>
    </variablelist>

  </refsect1>

  <refsect1>
    <title>Description</title>

    <para>A <link
linkend="class-gtktogglebutton"><classname>gtk.ToggleButton</classname></link> 
is a <link
linkend="class-gtkbutton"><classname>gtk.Button</classname></link> that has
two stable states: 'pressed-in' ("on" or "active") and "normal" ("off" or
"inactive"). The state changes to the alternate state each time the
togglebutton is clicked. The state of a <link
linkend="class-gtktogglebutton"><classname>gtk.ToggleButton</classname></link> 
can be set specifically using the <link
linkend="method-gtktogglebutton--set-active"><methodname>set_active</methodname>()</link> 
method, and retrieved using the <link
linkend="method-gtktogglebutton--get-active"><methodname>get_active</methodname>()</link> 
method. To simply switch the state of a toggle button, use the <link
linkend="method-gtktogglebutton--toggled"><methodname>toggled</methodname>()</link> 
method.</para>

  </refsect1>

  <refsect1 id="constructor-gtktogglebutton">
    <title>Constructor</title>

    <programlisting><constructorsynopsis language="python">
	<methodname>gtk.ToggleButton</methodname>
	<methodparam><parameter role="keyword">label</parameter>
	  <initializer>None</initializer></methodparam>
	<methodparam><parameter role="keyword">use_underline</parameter>
	  <initializer>True</initializer></methodparam>
      </constructorsynopsis></programlisting>
    <variablelist>
      <varlistentry>
	<term><parameter role="keyword">label</parameter>&nbsp;:</term>
	<listitem><simpara>the text to be displayed by the button label
including an underscore to indicate the mnemonic character if desired or
<literal>None</literal> if no label is required.</simpara></listitem>
      </varlistentry>
      <varlistentry>
	<term><parameter role="keyword">use_underline</parameter>&nbsp;:</term>
	<listitem><simpara>if <literal>True</literal>, an underscore in the
label text indicates the next character should be underlined and used for the
mnemonic accelerator key if it is the first character so
marked. Available in PyGTK 2.4 and above.</simpara></listitem>
      </varlistentry>
      <varlistentry>
	<term><emphasis>Returns</emphasis>&nbsp;:</term>
	<listitem><simpara>a new <link
linkend="class-gtktogglebutton"><classname>gtk.ToggleButton</classname></link> 
widget</simpara></listitem>
      </varlistentry>
    </variablelist>

    <para>Creates a new <link
linkend="class-gtktogglebutton"><classname>gtk.ToggleButton</classname></link> 
widget with the text label specified by <parameter>label</parameter>.
<parameter>label</parameter> will be parsed for underscore characters that
indicate mnemonic accelerators. If <parameter>label</parameter> is
<literal>None</literal> or not specified, no label will be created.</para>

    <para>In PyGTK 2.4 and above the <parameter>use_underline</parameter>
parameter is available and defaults to <literal>True</literal>. If
<parameter>use_underline</parameter> is set to <literal>False</literal> the
label text will not be parsed for mnemonic characters.</para>

  </refsect1>

  <refsect1>
    <title>Methods</title>

    <refsect2 id="method-gtktogglebutton--set-mode">
      <title>gtk.ToggleButton.set_mode</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_mode</methodname>
	  <methodparam><parameter
			 role="keyword">draw_indicator</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter
role="keyword">draw_indicator</parameter>&nbsp;:</term>
	  <listitem><simpara>if <literal>True</literal> display the button
as an indicator with a label; if <literal>False</literal> just display as a
normal button</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>set_mode</methodname>() method sets the
"draw-indicator" property to the value of<parameter>
draw_indicator</parameter>. If <parameter>draw_indicator</parameter> is
<literal>True</literal> the button is displayed as an indicator with a
label; otherwise, the button is displayed as a normal button.</para>

      <para>This method only affects subclasses of <link
linkend="class-gtktogglebutton"><classname>gtk.ToggleButton</classname></link> 
like <link
linkend="class-gtkcheckbutton"><classname>gtk.CheckButton</classname></link>
and <link
linkend="class-gtkradiobutton"><classname>gtk.RadioButton</classname></link>.</para>

    </refsect2>

    <refsect2 id="method-gtktogglebutton--get-mode">
      <title>gtk.ToggleButton.get_mode</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_mode</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara><literal>True</literal> if the button is
displayed as an indicator with a label; <literal>False</literal> if
displayed as a normal button.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_mode</methodname>() method returns the value
of the "draw-indicator" property. If "draw-indicator" is
<literal>True</literal> the button is displayed as an indicator with a
label; if <literal>False</literal>, the button is displayed as a normal
button. See the <link
linkend="method-gtktogglebutton--set-mode"><methodname>set_mode</methodname>()</link> 
method.</para>

    </refsect2>

    <refsect2 id="method-gtktogglebutton--set-active">
      <title>gtk.ToggleButton.set_active</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_active</methodname>
	  <methodparam><parameter
			 role="keyword">is_active</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter
role="keyword">is_active</parameter>&nbsp;:</term>
	  <listitem><simpara>if <literal>True</literal> the togglebutton
state is active ("on")</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>set_active</methodname>() method sets the
"active" property to the value of <parameter>is_active</parameter>. If
<parameter>is_active</parameter> is <literal>True</literal> the <link
linkend="class-gtktogglebutton"><classname>gtk.ToggleButton</classname></link> 
is 'pressed in', and if <literal>False</literal> it's 'normal'. This method
causes the "toggled" signal to be emitted.</para>

    </refsect2>

    <refsect2 id="method-gtktogglebutton--get-active">
      <title>gtk.ToggleButton.get_active</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_active</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>True if the togglebutton is
active</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_active</methodname>() method returns the
value of the "active" property. If "active" is <literal>True</literal> the
togglebutton is 'pressed in'; if <literal>False</literal>, it's
'normal'.</para>

    </refsect2>

    <refsect2 id="method-gtktogglebutton--toggled">
      <title>gtk.ToggleButton.toggled</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>toggled</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>

      <para>The <methodname>toggled</methodname>() method emits the
"toggled" signal on the togglebutton.</para>

    </refsect2>

    <refsect2 id="method-gtktogglebutton--set-inconsistent">
      <title>gtk.ToggleButton.set_inconsistent</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_inconsistent</methodname>
	  <methodparam><parameter
			 role="keyword">setting</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">setting</parameter>&nbsp;:</term>
	  <listitem><simpara>if <literal>True</literal> the state is
inconsistent</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>set_inconsistent</methodname>() method sets the
"inconsistent" property to the value of <parameter>setting</parameter>. If
<parameter>setting</parameter> is <literal>True</literal> the togglebutton
is displayed in the inconsistent state - an "in between" state. This method
is useful if the user has selected a range of elements (such as some text or
spreadsheet cells) that are affected by a toggle button, and the current
values in that range are inconsistent and you want to indicate that by
setting the toggle button to an "in between" display.  Normally you would
turn off the inconsistent state again if the user clicks the toggle
button.</para>

    </refsect2>

    <refsect2 id="method-gtktogglebutton--get-inconsistent">
      <title>gtk.ToggleButton.get_inconsistent</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_inconsistent</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara><literal>True</literal> if the state is
inconsistent</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_inconsistent</methodname>() method returns
the value of the "inconsistent" property. If "inconsistent" is
<literal>True</literal> the togglebutton is displayed in an 'in between'
state. See the <link
linkend="method-gtktogglebutton--set-inconsistent"><methodname>set_inconsistent</methodname>()</link> 
method for more details.</para>

    </refsect2>

  </refsect1>

  <refsect1>
    <title>Signals</title>

    <refsect2 id="signal-gtktogglebutton--toggled">
      <title>The "toggled" gtk.ToggleButton Signal</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>callback</methodname>
	  <methodparam><parameter>togglebutton</parameter></methodparam>
	  <methodparam><parameter>user_param1</parameter></methodparam>
	  <methodparam><parameter>...</parameter></methodparam>
	</methodsynopsis></programlisting>

      <variablelist>
	<varlistentry>
	  <term><parameter>togglebutton</parameter>&nbsp;:</term>
	  <listitem><simpara>the togglebutton that received the
signal</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>user_param1</parameter>&nbsp;:</term>
          <listitem><simpara>the first user parameter (if any) specified
with the <link
linkend="method-gobject--connect"><methodname>connect</methodname>()</link>
method</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>...</parameter>&nbsp;:</term>
	  <listitem><simpara>additional user parameters (if
any)</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The "toggled" signal is emitted when the togglebutton state
changes either programmatically or by user action.</para>

    </refsect2>

  </refsect1>

</refentry>
