<?xml version="1.0" standalone="no"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="class-gdkscreen">
  <refnamediv>
    <refname>gtk.gdk.Screen</refname>
    <refpurpose>an object representing a physical screen</refpurpose>
  </refnamediv>

  <refsect1>
    <title>Synopsis</title>

    <classsynopsis language="python">
      <ooclass><classname>gtk.gdk.Screen</classname></ooclass>
      <ooclass><classname><link linkend="class-gobject">gobject.GObject</link></classname></ooclass>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-default-colormap">get_default_colormap</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--set-default-colormap">set_default_colormap</link></methodname>
	<methodparam><parameter role="keyword">colormap</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-system-colormap">get_system_colormap</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-system-visual">get_system_visual</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-rgb-colormap">get_rgb_colormap</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-rgb-visual">get_rgb_visual</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-root-window">get_root_window</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-display">get_display</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-number">get_number</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-width">get_width</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-height">get_height</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-width-mm">get_width_mm</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-height-mm">get_height_mm</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--list-visuals">list_visuals</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-toplevel-windows">get_toplevel_windows</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--make-display-name">make_display_name</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-n-monitors">get_n_monitors</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-monitor-geometry">get_monitor_geometry</link></methodname>
	<methodparam><parameter role="keyword">monitor_num</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-monitor-at-point">get_monitor_at_point</link></methodname>
	<methodparam><parameter role="keyword">x</parameter></methodparam>
	<methodparam><parameter role="keyword">y</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-monitor-at-window">get_monitor_at_window</link></methodname>
	<methodparam><parameter role="keyword">window</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--broadcast-client-message">broadcast_client_message</link></methodname>
	<methodparam><parameter role="keyword">event</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-setting">get_setting</link></methodname>
	<methodparam><parameter role="keyword">name</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-rgba-colormap">get_rgba_colormap</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-rgba-visual">get_rgba_visual</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-monitor-height-mm">get_monitor_height_mm</link></methodname>
	<methodparam><parameter role="keyword">monitor_num</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-monitor-width-mm">get_monitor_width_mm</link></methodname>
	<methodparam><parameter role="keyword">monitor_num</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkscreen--get-monitor-plug-name">get_monitor_plug_name</link></methodname>
	<methodparam><parameter role="keyword">monitor_num</parameter></methodparam>
      </methodsynopsis>
    </classsynopsis>

    <programlisting>
<emphasis role="bold">Functions</emphasis>

<methodsynopsis language="python">
	<methodname><link linkend="function-gdk--screen-width">gtk.gdk.screen_width</link></methodname>
	<methodparam><parameter role="keyword"></parameter></methodparam>
      </methodsynopsis><methodsynopsis language="python">
	<methodname><link linkend="function-gdk--screen-height">gtk.gdk.screen_height</link></methodname>
	<methodparam><parameter role="keyword"></parameter></methodparam>
      </methodsynopsis><methodsynopsis language="python">
	<methodname><link linkend="function-gdk--screen-width-mm">gtk.gdk.screen_width_mm</link></methodname>
	<methodparam><parameter role="keyword"></parameter></methodparam>
      </methodsynopsis><methodsynopsis language="python">
	<methodname><link linkend="function-gdk--screen-height-mm">gtk.gdk.screen_height_mm</link></methodname>
	<methodparam><parameter role="keyword"></parameter></methodparam>
      </methodsynopsis><methodsynopsis language="python">
	<methodname><link linkend="function-gdk--screen-get-default">gtk.gdk.screen_get_default</link></methodname>
	<methodparam><parameter role="keyword"></parameter></methodparam>
      </methodsynopsis></programlisting>

  </refsect1>

  <refsect1>
    <title>Ancestry</title>

<synopsis>+-- <link linkend="class-gobject">gobject.GObject</link>
  +-- <link linkend="class-gdkscreen">gtk.gdk.Screen</link>
</synopsis>

  </refsect1>

  <refsect1>
    <title>Signal Prototypes</title>

    <variablelist>
      <varlistentry>
        <term>"<link linkend="signal-gdkscreen--size-changed">size-changed</link>"</term>
        <listitem>
          <methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>screen</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis>
        </listitem>
      </varlistentry>
    </variablelist>
    <variablelist>
      <varlistentry>
        <term>"<link linkend="signal-gdkscreen--monitors-changed">monitors-changed</link>"</term>
        <listitem>
          <methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>screen</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis>
        </listitem>
      </varlistentry>
    </variablelist>

  </refsect1>

  <refsect1>
    <title>Description</title>

    <note>
      <para>This object is available in PyGTK 2.2 and above.</para>
    </note>

    <para><link
linkend="class-gdkscreen"><classname>gtk.gdk.Screen</classname></link>
objects are the <literal>PyGTK</literal> representation of a physical
screen. It is used throughout <literal>PyGTK</literal> to specify which
screen the top level windows are to be displayed on. It is also used to
query the screen specification and default settings such as the default
colormap (the <link
linkend="method-gdkscreen--get-default-colormap"><methodname>get_default_colormap</methodname>()</link>
method), the screen width (the <link
linkend="method-gdkscreen--get-width"><methodname>get_width</methodname>()</link>
method), etc.</para>

    <note>
      <para>a screen may consist of multiple monitors that are merged to
form a large screen area.</para>
    </note>

  </refsect1>

  <refsect1>
    <title>Methods</title>

    <refsect2 id="method-gdkscreen--get-default-colormap">
      <title>gtk.gdk.Screen.get_default_colormap</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_default_colormap</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the default <link
	  linkend="class-gdkcolormap"><classname>gtk.gdk.Colormap</classname></link>.</simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>get_default_colormap</methodname>() method
returns the default <link
linkend="class-gdkcolormap"><classname>gtk.gdk.Colormap</classname></link>
for the screen.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--set-default-colormap">
      <title>gtk.gdk.Screen.set_default_colormap</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_default_colormap</methodname>
	  <methodparam><parameter role="keyword">colormap</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">colormap</parameter>&nbsp;:</term>
	  <listitem><simpara>a <link
	  linkend="class-gdkcolormap"><classname>gtk.gdk.Colormap</classname></link></simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>set_default_colormap</methodname>() method sets
the <link
linkend="class-gdkcolormap"><classname>gtk.gdk.Colormap</classname></link>
specified by <parameter>colormap</parameter> as the default colormap for the
screen.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-system-colormap">
      <title>gtk.gdk.Screen.get_system_colormap</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_system_colormap</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the default colormap for the screen.

Since: 2.2</simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>get_system_colormap</methodname>() method
returns the system's default colormap for the screen</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-system-visual">
      <title>gtk.gdk.Screen.get_system_visual</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_system_visual</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the system <link
	  linkend="class-gdkvisual"><classname>gtk.gdk.Visual</classname></link></simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>get_system_visual</methodname>() method returns
the system's default <link
linkend="class-gdkvisual"><classname>gtk.gdk.Visual</classname></link> for
the screen.  This is the visual for the root window of the display.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-rgb-colormap">
      <title>gtk.gdk.Screen.get_rgb_colormap</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_rgb_colormap</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a <link
	  linkend="class-gdkcolormap"><classname>gtk.gdk.Colormap</classname></link></simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>get_rgb_colormap</methodname>() method returns
the preferred colormap for rendering image data on the screen.  Not a very
useful function; historically, <literal>GDK</literal> could only render RGB
image data to one colormap and visual, but in the current version it can
render to any colormap and visual. So there's no need to call this
function.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-rgb-visual">
      <title>gtk.gdk.Screen.get_rgb_visual</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_rgb_visual</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a <link
	  linkend="class-gdkvisual"><classname>gtk.gdk.Visual</classname></link></simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>get_rgb_visual</methodname>() method returns a
"preferred visual" chosen for rendering <literal>RGB</literal> image data on
the screen.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-root-window">
      <title>gtk.gdk.Screen.get_root_window</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_root_window</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the root <link
	  linkend="class-gdkwindow"><classname>gtk.gdk.Window</classname></link></simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>get_root_window</methodname>() method returns
the root <link
linkend="class-gdkwindow"><classname>gtk.gdk.Window</classname></link> of
the screen.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-display">
      <title>gtk.gdk.Screen.get_display</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_display</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the display that the screen belongs
	  to</simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>get_display</methodname>() method returns the
<link
linkend="class-gdkdisplay"><classname>gtk.gdk.Display</classname></link>
that the screen belongs to.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-number">
      <title>gtk.gdk.Screen.get_number</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_number</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the index</simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>get_number</methodname>() method returns the
index of the screen among the screens in its display. (See the <link
linkend="method-gdkscreen--get-display"><methodname>get_display()</methodname></link>
method)</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-width">
      <title>gtk.gdk.Screen.get_width</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_width</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the width of the screen in
	  pixels.</simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>get_width</methodname>() method returns the
width of the screen in pixels</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-height">
      <title>gtk.gdk.Screen.get_height</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_height</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the height of the screen in
	  pixels.</simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>get_height</methodname>() method returns the
height of the screen in pixels</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-width-mm">
      <title>gtk.gdk.Screen.get_width_mm</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_width_mm</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the width of the screen in
	  millimeters.</simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>get_width_mm</methodname>() method returns the
width of the screen in millimeters. Note that on some X servers this value
will not be correct.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-height-mm">
      <title>gtk.gdk.Screen.get_height_mm</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_height_mm</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the height of the screen in pixels.

Since: 2.2</simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>get_height_mm</methodname>() method returns the
height of the screen in millimeters. Note that on some X servers this value
will not be correct.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--list-visuals">
      <title>gtk.gdk.Screen.list_visuals</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>list_visuals</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a list of <link
	  linkend="class-gdkvisual"><classname>gtk.gdk.Visual</classname></link></simpara></listitem>
	</varlistentry>
      </variablelist>
 
    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

     <para>The <methodname>list_visuals</methodname>() method returns a list
of the available visuals for the screen.  A <link
linkend="class-gdkvisual"><classname>gtk.gdk.Visual</classname></link>
describes a hardware image data format. For example, a visual might support
24-bit color, or 8-bit color, and might expect pixels to be in a certain
format.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-toplevel-windows">
      <title>gtk.gdk.Screen.get_toplevel_windows</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_toplevel_windows</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a list of the  toplevel <link linkend="class-gdkwindow"><classname>gtk.gdk.Window</classname></link> objects</simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>get_toplevel_windows</methodname>() method
returns a list of all toplevel <link
linkend="class-gdkwindow"><classname>gtk.gdk.Window</classname></link>
objects known to <literal>PyGTK</literal> on the screen. A toplevel window
is a child of the root window (see the <link
linkend="function-gdk--get-default-root-window"><function>gtk.gdk.get_default_root_window</function>()</link>
function).</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--make-display-name">
      <title>gtk.gdk.Screen.make_display_name</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>make_display_name</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a generated nae</simpara></listitem>
	</varlistentry>
      </variablelist>
 
    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

     <para>The <methodname>make_display_name</methodname>() method
determines the name to pass to <function>gtk.gdk.Display()</function> to get
a <link
linkend="class-gdkdisplay"><classname>gtk.gdk.Display</classname></link>
with this screen as the default screen.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-n-monitors">
      <title>gtk.gdk.Screen.get_n_monitors</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_n_monitors</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the number of monitors that the screen consists
	  of.</simpara></listitem>
	</varlistentry>
      </variablelist>
 
    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

     <para>The <methodname>get_n_monitors</methodname>() method returns the
number of monitors that the screen consists of.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-monitor-geometry">
      <title>gtk.gdk.Screen.get_monitor_geometry</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_monitor_geometry</methodname>
	  <methodparam><parameter role="keyword">monitor_num</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">monitor_num</parameter>&nbsp;:</term>
	  <listitem><simpara>the monitor number.</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a <link
	  linkend="class-gdkrectangle"><classname>gtk.gdk.Rectangle</classname></link>
	  containing the monitor geometry</simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>get_monitor_geometry</methodname>() method
returns a <link
linkend="class-gdkrectangle"><classname>gtk.gdk.Rectangle</classname></link>
representing the size and position of the individual monitor within the the
entire screen area.</para>

      <para>Note that the size of the entire screen area can be retrieved
via the <link
linkend="method-gdkscreen--get-width"><methodname>get_width()</methodname></link>
and <link
linkend="method-gdkscreen--get-height"><methodname>get_height()</methodname></link>. methods.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-monitor-at-point">
      <title>gtk.gdk.Screen.get_monitor_at_point</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_monitor_at_point</methodname>
	  <methodparam><parameter role="keyword">x</parameter></methodparam>
	  <methodparam><parameter role="keyword">y</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">x</parameter>&nbsp;:</term>
	  <listitem><simpara>an x coordinate in the virtual
	  screen.</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter role="keyword">y</parameter>&nbsp;:</term>
	  <listitem><simpara>a y coordinate in the virtual
	  screen.</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the number of the monitor that the point
	  (<parameter>x</parameter>,<parameter>y</parameter>) lies in, or a
	  monitor close to
	  (<parameter>x</parameter>,<parameter>y</parameter>) if the point
	  is not in any monitor.</simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>get_monitor_at_point</methodname>() method
returns the number of the monitor in which the point
(<parameter>x</parameter>,<parameter>y</parameter>) is located or the
closest monitor if not in a monitor.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-monitor-at-window">
      <title>gtk.gdk.Screen.get_monitor_at_window</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_monitor_at_window</methodname>
	  <methodparam><parameter role="keyword">window</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">window</parameter>&nbsp;:</term>
	  <listitem><simpara>a <link
	  linkend="class-gdkwindow"><classname>gtk.gdk.Window</classname></link></simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the number of the monitor that most of <parameter>window</parameter> is located.


Since: 2.2</simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>get_monitor_at_window</methodname>() method
returns the number of the monitor that most of the <link
linkend="class-gdkwindow"><classname>gtk.gdk.Window</classname></link>
specified by <parameter>window</parameter> is in. If
<parameter>window</parameter> does not intersect any monitors, the closest
monitor to the main bounding rectangle of <parameter>window</parameter> is
returned.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--broadcast-client-message">
      <title>gtk.gdk.Screen.broadcast_client_message</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>broadcast_client_message</methodname>
	  <methodparam><parameter role="keyword">event</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">event</parameter>&nbsp;:</term>
	  <listitem><simpara>the <link
	  linkend="class-gdkevent"><classname>gtk.gdk.Event</classname></link>.</simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>broadcast_client_message</methodname>() method
sends a message to all top level windows. On X11, sends an X ClientMessage
event to all toplevel windows on the screen.</para>

      <para>Toplevel windows are determined by checking for the
<literal>WM_STATE</literal> property, as described in the Inter-Client
Communication Conventions Manual (ICCCM).  If no windows are found with the
<literal>WM_STATE</literal> property set, the message is sent to all
children of the root window.</para>

      <para>On Windows, broadcasts a message registered with the name
<literal>GDK_WIN32_CLIENT_MESSAGE</literal> to all top-level windows. The
amount of data is limited to one long, i.e. four bytes.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-setting">
      <title>gtk.gdk.Screen.get_setting</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_setting</methodname>
	  <methodparam><parameter role="keyword">name</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">name</parameter>&nbsp;:</term>
	  <listitem><simpara>the name of the setting</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the value of
	  <parameter>setting</parameter></simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.2 and above.</para>
    </note>

      <para>The <methodname>get_setting</methodname>() method returns the
value of the desktop-wide setting (specified by
<parameter>setting</parameter>) such as double-click time for the
screen.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-rgba-colormap">
      <title>gtk.gdk.Screen.get_rgba_colormap</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_rgba_colormap</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a <link
	  linkend="class-gdkcolormap"><classname>gtk.gdk.Colormap</classname></link>
          for use with windows with an alpha channel or <literal>None</literal>
          if the capability is not available.</simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.10 and above.</para>
    </note>

      <para>The <methodname>get_rgba_colormap</methodname>() method returns
      a colormap to use for creating windows or pixmaps with an alpha
      channel. The windowing system on which PyGTK is running may not
      support this capability, in which case <literal>None</literal> will be
      returned. Even if a non-<literal>None</literal> value is returned,
      it's possible that the window's alpha channel won't be honored when
      displaying the window on the screen: in particular, for X an
      appropriate windowing manager and compositing manager must be running
      to provide appropriate display.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-rgba-visual">
      <title>gtk.gdk.Screen.get_rgba_visual</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_rgba_visual</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a <link
	  linkend="class-gdkvisual"><classname>gtk.gdk.Visual</classname></link>
          to use for windows with an alpha channel or <literal>None</literal>
          if the capability is not available.</simpara></listitem>
	</varlistentry>
      </variablelist>

    <note>
      <para>This method is available in PyGTK 2.10 and above.</para>
    </note>

      <para>The <methodname>get_rgba_visual</methodname>() method returns a
      visual to use for creating windows or pixmaps with an alpha
      channel. See the <link
      linkend="method-gdkscreen--get-rgba-colormap"><methodname>get_rgba_colormap</methodname>()</link>
      method for caveats.</para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-monitor-height-mm">
      <title>gtk.gdk.Screen.get_monitor_height_mm</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_monitor_height_mm</methodname>
	  <methodparam><parameter role="keyword">monitor_num</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">monitor_num</parameter>&nbsp;:</term>
	  <listitem><simpara>Number of the monitor.</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>The height of the monitor, or -1 if not available.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.14 and above.</para>
      </note>

      <para>
	The <methodname>get_monitor_height_mm</methodname>() method gets the height
	in millimeters of the specified monitor.
      </para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-monitor-width-mm">
      <title>gtk.gdk.Screen.get_monitor_width_mm</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_monitor_width_mm</methodname>
	  <methodparam><parameter role="keyword">monitor_num</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">monitor_num</parameter>&nbsp;:</term>
	  <listitem><simpara>Number of the monitor.</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>The width of the monitor, or -1 if not available.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.14 and above.</para>
      </note>

      <para>
	The <methodname>get_monitor_width_mm</methodname>() method gets the width
	in millimeters of the specified monitor.
      </para>

    </refsect2>

    <refsect2 id="method-gdkscreen--get-monitor-plug-name">
      <title>gtk.gdk.Screen.get_monitor_plug_name</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_monitor_plug_name</methodname>
	  <methodparam><parameter role="keyword">monitor_num</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">monitor_num</parameter>&nbsp;:</term>
	  <listitem><simpara>Number of the monitor.</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>A newly-allocated string containing the name of the monitor,
	  or <literal>None</literal> if the name cannot be determined.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.14 and above.</para>
      </note>

      <para>
	The <methodname>get_monitor_plug_name</methodname>() method returns the output
	name of the specified monitor. Usually something like VGA, DVI, or TV, not the
	actual product name of the display device.
      </para>

    </refsect2>

  </refsect1>

  <refsect1>
    <title>Functions</title>

    <refsect2 id="function-gdk--screen-width">
      <title>gtk.gdk.screen_width</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>gtk.gdk.screen_width</methodname>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	<term><emphasis>Returns</emphasis>&nbsp;:</term> <listitem><simpara>
	  the width of the default screen in pixels.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <function>gtk.gdk.screen_width</function>() function
returns the width of the default screen in pixels.</para>

    </refsect2>

    <refsect2 id="function-gdk--screen-height">
      <title>gtk.gdk.screen_height</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>gtk.gdk.screen_height</methodname>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	<term><emphasis>Returns</emphasis>&nbsp;:</term> <listitem><simpara>
	  the height of the default screen in pixels.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <function>gtk.gdk.screen_height</function>() function
returns the height of the default screen in pixels.</para>

    </refsect2>

    <refsect2 id="function-gdk--screen-width-mm">
      <title>gtk.gdk.screen_width_mm</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>gtk.gdk.screen_width_mm</methodname>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	<term><emphasis>Returns</emphasis>&nbsp;:</term> <listitem><simpara>
	  the width of the default screen in millimeters, though it is not
	  always correct.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <function>gtk.gdk.screen_width_mm</function>() function
returns the width of the default screen in millimeters. Note that on many X
servers this value will not be correct.</para>

    </refsect2>

    <refsect2 id="function-gdk--screen-height-mm">
      <title>gtk.gdk.screen_height_mm</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>gtk.gdk.screen_height_mm</methodname>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	<term><emphasis>Returns</emphasis>&nbsp;:</term> <listitem><simpara>
	  the height of the default screen in millimeters, though it is not
	  always correct.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <function>gtk.gdk.screen_height_mm</function>() function
returns the height of the default screen in millimeters. Note that on many X
servers this value will not be correct.</para>

    </refsect2>

    <refsect2 id="function-gdk--screen-get-default">
      <title>gtk.gdk.screen_get_default</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>gtk.gdk.screen_get_default</methodname>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	<term><emphasis>Returns</emphasis>&nbsp;:</term>
      <listitem><simpara>a <link
      linkend="class-gdkscreen"><classname>gtk.gdk.Screen</classname></link>,
      or <literal>None</literal> if there is no default
      display.</simpara></listitem>
	</varlistentry>
      </variablelist>


      <note>
	<para>This function is available in PyGTK 2.2 and above.</para>
      </note>

      <para>The <function>gtk.gdk.screen_get_default</function>() function
returns the default <link
linkend="class-gdkscreen"><classname>gtk.gdk.Screen</classname></link> for
the default <link
linkend="class-gdkdisplay"><classname>gtk.gdk.Display</classname></link>. (See
the <link
linkend="function-gdk--display-get-default"><function>gtk.gdk.display_get_default</function>()</link>
function).</para>

    </refsect2>

  </refsect1>

  <refsect1>
    <title>Signals</title>

    <refsect2 id="signal-gdkscreen--size-changed">
      <title>The "size-changed" gtk.gdk.Screen Signal</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>callback</methodname>
	  <methodparam><parameter>screen</parameter></methodparam>
	  <methodparam><parameter>user_param1</parameter></methodparam>
	  <methodparam><parameter>...</parameter></methodparam>
	</methodsynopsis></programlisting>

      <variablelist>
	<varlistentry>
	  <term><parameter>screen</parameter>&nbsp;:</term>
	  <listitem><simpara>the screen that received the
signal</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>user_param1</parameter>&nbsp;:</term>
          <listitem><simpara>the first user parameter (if any) specified
with the <link
linkend="method-gobject--connect"><methodname>connect</methodname>()</link>
method</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>...</parameter>&nbsp;:</term>
	  <listitem><simpara>additional user parameters (if
any)</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The "size-changed" signal is emitted when the pixel width or
height of a screen changes.</para>

    </refsect2>

    <refsect2 id="signal-gdkscreen--monitor-changed">
      <title>The "monitor-changed" gtk.gdk.Screen Signal</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>callback</methodname>
	  <methodparam><parameter>screen</parameter></methodparam>
	  <methodparam><parameter>user_param1</parameter></methodparam>
	  <methodparam><parameter>...</parameter></methodparam>
	</methodsynopsis></programlisting>

      <variablelist>
	<varlistentry>
	  <term><parameter>screen</parameter>&nbsp;:</term>
	  <listitem><simpara>the screen that received the
signal</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>user_param1</parameter>&nbsp;:</term>
          <listitem><simpara>the first user parameter (if any) specified
with the <link
linkend="method-gobject--connect"><methodname>connect</methodname>()</link>
method</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>...</parameter>&nbsp;:</term>
	  <listitem><simpara>additional user parameters (if
any)</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>
	The "monitor-changed" signal is emitted when the number, size or position
	of the monitors attached to the screen change.
      </para>
      <para>
	Only for X for now. Future implementations for Win32 and OS X may be a possibility.
      </para>
      

    </refsect2>
  </refsect1>

</refentry>
