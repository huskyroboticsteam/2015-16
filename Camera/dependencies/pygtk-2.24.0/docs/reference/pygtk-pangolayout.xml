<?xml version="1.0" standalone="no"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">
<refentry id="class-pangolayout">
  <refnamediv>
    <refname>pango.Layout</refname>
    <refpurpose>an object representing a paragraph of text with
attributes.</refpurpose>
  </refnamediv>

  <refsect1>
    <title>Synopsis</title>

    <classsynopsis language="python">
      <ooclass><classname>pango.Layout</classname></ooclass>
      <ooclass><classname><link
linkend="class-gobject">gobject.GObject</link></classname></ooclass>
      <constructorsynopsis language="python">
	<methodname><link
linkend="constructor-pangolayout">pango.Layout</link></methodname>
	<methodparam><parameter
		       role="keyword">context</parameter></methodparam>
      </constructorsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--copy">copy</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--get-context">get_context</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--set-attributes">set_attributes</link></methodname>
	<methodparam><parameter
		       role="keyword">attrs</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--get-attributes">get_attributes</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--set-text">set_text</link></methodname>
	<methodparam><parameter
		       role="keyword">text</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--get-text">get_text</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--set-markup">set_markup</link></methodname>
	<methodparam><parameter
		       role="keyword">markup</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--set-markup-with-accel">set_markup_with_accel</link></methodname>
	<methodparam><parameter
		       role="keyword">markup</parameter></methodparam>
	<methodparam><parameter
		       role="keyword">accel_marker</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--get-font-description">get_font_description</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--set-font-description">set_font_description</link></methodname>
	<methodparam><parameter
		       role="keyword">desc</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--set-width">set_width</link></methodname>
	<methodparam><parameter
		       role="keyword">width</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--get-width">get_width</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--set-wrap">set_wrap</link></methodname>
	<methodparam><parameter
		       role="keyword">wrap</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--get-wrap">get_wrap</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--set-indent">set_indent</link></methodname>
	<methodparam><parameter
		       role="keyword">indent</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--get-indent">get_indent</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--set-spacing">set_spacing</link></methodname>
	<methodparam><parameter
		       role="keyword">spacing</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--get-spacing">get_spacing</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--set-justify">set_justify</link></methodname>
	<methodparam><parameter
		       role="keyword">justify</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--get-justify">get_justify</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--set-alignment">set_alignment</link></methodname>
	<methodparam><parameter
		       role="keyword">alignment</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--get-alignment">get_alignment</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--set-tabs">set_tabs</link></methodname>
	<methodparam><parameter
		       role="keyword">tabs</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--get-tabs">get_tabs</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--set-single-paragraph-mode">set_single_paragraph_mode</link></methodname>
	<methodparam><parameter
		       role="keyword">setting</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--get-single-paragraph-mode">get_single_paragraph_mode</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--context-changed">context_changed</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--index-to-pos">index_to_pos</link></methodname>
	<methodparam><parameter
		       role="keyword">index</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--get-cursor-pos">get_cursor_pos</link></methodname>
	<methodparam><parameter
		       role="keyword">index</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--move-cursor-visually">move_cursor_visually</link></methodname>
	<methodparam><parameter
		       role="keyword">strong</parameter></methodparam>
	<methodparam><parameter
		       role="keyword">old_index</parameter></methodparam>
	<methodparam><parameter
		       role="keyword">old_trailing</parameter></methodparam>
	<methodparam><parameter
		       role="keyword">direction</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--xy-to-index">xy_to_index</link></methodname>
	<methodparam><parameter role="keyword">x</parameter></methodparam>
	<methodparam><parameter role="keyword">y</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--get-extents">get_extents</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--get-pixel-extents">get_pixel_extents</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--get-size">get_size</link></methodname>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--get-pixel-size">get_pixel_size</link></methodname>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-pangolayout--get-line-count">get_line_count</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
        <methodname><link linkend="method-pangolayout--get-line">get_line</link></methodname>
        <methodparam><parameter role="keyword">line</parameter></methodparam>
      </methodsynopsis>
<!-- NOT IMPLEMENTED
<methodsynopsis language="python">
    <methodname><link linkend="method-pangolayout- -get-lines">get_lines</link></methodname>
    <methodparam></methodparam>
      </methodsynopsis>
END NOT IMPLEMENTED -->
      <methodsynopsis language="python">
        <methodname><link linkend="method-pangolayout--get-iter">get_iter</link></methodname>
        <methodparam></methodparam>
      </methodsynopsis>

    </classsynopsis>

  </refsect1>

  <refsect1>
    <title>Ancestry</title>

<synopsis>+-- <link linkend="class-gobject">gobject.GObject</link>
  +-- <link linkend="class-pangolayout">pango.Layout</link>
</synopsis>

  </refsect1>

  <refsect1>
    <title>Description</title>

    <para>A <link
linkend="class-pangolayout"><classname>pango.Layout</classname></link>
object represents a paragraph of text with a <link
linkend="class-pangocontext"><classname>pango.Context</classname></link>, a
UTF-8 text string and a set of attributes for that string. The set of
formatted lines can be extracted from the object, the layout can be
rendered, and conversion between logical character positions within the
layout's text, and the physical position of the resulting glyphs can be
made. Also there are a number of attributes that adjust the formatting of
the layout.</para>

  </refsect1>

  <refsect1 id="constructor-pangolayout">
    <title>Constructor</title>

    <programlisting><constructorsynopsis language="python">
	<methodname>pango.Layout</methodname>
	<methodparam><parameter
		       role="keyword">context</parameter></methodparam>
      </constructorsynopsis></programlisting>
    <variablelist>
      <varlistentry>
	<term><parameter role="keyword">context</parameter>&nbsp;:</term>
	<listitem><simpara>a <link
linkend="class-pangocontext"><classname>pango.Context</classname></link></simpara></listitem>
      </varlistentry>
      <varlistentry>
	<term><emphasis>Returns</emphasis>&nbsp;:</term>
	<listitem><simpara>a new <link
linkend="class-pangolayout"><classname>pango.Layout</classname></link>.</simpara></listitem>
      </varlistentry>
    </variablelist>

    <para>Creates a new <link
linkend="class-pangolayout"><classname>pango.Layout</classname></link>
object with attributes initialized to the default values of the <link
linkend="class-pangocontext"><classname>pango.Context</classname></link>
specified by <parameter>context</parameter>.</para>

  </refsect1>

  <refsect1>
    <title>Methods</title>

  <refsect2 id="method-pangolayout--copy">
      <title>pango.Layout.copy</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>copy</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a new <link
linkend="class-pangolayout"><classname>pango.Layout</classname></link> that
is a copy of the layout</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>copy</methodname>() method returns a <link
linkend="class-pangolayout"><classname>pango.Layout</classname></link> that
is a deep copy-by-value of the layout. The attribute list, tab array, and
text from the layout are all copied by value.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--get-context">
      <title>pango.Layout.get_context</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_context</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the <link
linkend="class-pangocontext"><classname>pango.Context</classname></link> for
the layout.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_context</methodname>() method returns the
<link
linkend="class-pangocontext"><classname>pango.Context</classname></link>
used for this layout.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--set-attributes">
      <title>pango.Layout.set_attributes</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_attributes</methodname>
	  <methodparam><parameter
			 role="keyword">attrs</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">attrs</parameter>&nbsp;:</term>
	  <listitem><simpara>a <link
linkend="class-pangoattrlist"><classname>pango.AttrList</classname></link></simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>set_attributes</methodname>() method sets the
<link
linkend="class-pangoattrlist"><classname>pango.AttrList</classname></link>
for the layout object to the value specified by
<parameter>attrs</parameter>.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--get-attributes">
      <title>pango.Layout.get_attributes</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_attributes</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a <link
linkend="class-pangoattrlist"><classname>pango.AttrList</classname></link></simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_attributes</methodname>() method returns the
<link
linkend="class-pangoattrlist"><classname>pango.AttrList</classname></link>
for the layout, if any.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--set-text">
      <title>pango.Layout.set_text</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_text</methodname>
	  <methodparam><parameter
			 role="keyword">text</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">text</parameter>&nbsp;:</term>
	  <listitem><simpara>a UTF8-string</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>set_text</methodname>() method sets the text of
the layout to the value specified by <parameter>text</parameter>.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--get-text">
      <title>pango.Layout.get_text</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_text</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the text in the layout</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_text</methodname>() method returns the text
in the layout.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--set-markup">
      <title>pango.Layout.set_markup</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_markup</methodname>
	  <methodparam><parameter
			 role="keyword">markup</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">markup</parameter>&nbsp;:</term>
	  <listitem><simpara>marked-up text</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>set_markup</methodname>() method is the same as
the <link
linkend="method-pangolayout--set-markup-with-accel"><methodname>set_markup_with_accel</methodname>()</link> 
method but the markup text isn't scanned for accelerators.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--set-markup-with-accel">
      <title>pango.Layout.set_markup_with_accel</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_markup_with_accel</methodname>
	  <methodparam><parameter
			 role="keyword">markup</parameter></methodparam>
	  <methodparam><parameter
			 role="keyword">accel_marker</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">markup</parameter>&nbsp;:</term>
	  <listitem><simpara>some marked-up text (see the <link
linkend="pango-markup-language">Pango Markup Language</link> reference
page)</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter
role="keyword">accel_marker</parameter>&nbsp;:</term>
	  <listitem><simpara>marker for accelerators in the
text</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the accelerator character if
any</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>set_markup_with_accel</methodname>() method sets
the layout text and attribute list from marked-up text to the value
specified by <parameter>markup_format</parameter> (see the <link
linkend="pango-markup-language">Pango Markup Language</link> reference
page). The current text and attribute list of the layout are replaced. If
<parameter>accel_marker</parameter> is nonzero the markup will be parsed for
the marker and the  character following the first marker becomes the
accelerator character. For example, if the accelerator marker is an
underscore, the character after the first underscore will be the accelerator
character. All characters marked as an accelerator will be displayed with a
<literal>pango.UNDERLINE_LOW</literal> attribute, and the accelerator
character will be returned in <parameter>accel_char</parameter>. A literal
<parameter>accel_marker</parameter> character can be put in the markup by
using two <parameter>accel_marker</parameter> characters together.</para>

    </refsect2>
    
    <refsect2 id="method-pangolayout--get-font-description">
      <title>pango.Layout.get_font_description</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_font_description</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the layout's font description, or <literal>None</literal>
	  if the font description from the layout's context is inherited.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_font_description</methodname>() method returns
      the font description for the layout, if any</para>

    </refsect2>

    <refsect2 id="method-pangolayout--set-font-description">
      <title>pango.Layout.set_font_description</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_font_description</methodname>
	  <methodparam><parameter
			 role="keyword">desc</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">desc</parameter>&nbsp;:</term>
	  <listitem><simpara>the new <link
linkend="class-pangofontdescription"><classname>pango.FontDescription</classname></link>, 
or <literal>None</literal> to unset the current font
description.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>set_font_description</methodname>() method set
the default <link
linkend="class-pangofontdescription"><classname>pango.FontDescription</classname></link> 
for the layout to the value specified by <parameter>desc</parameter>. If no
font description is set on the layout, the font description from the
layout's context is used.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--set-width">
      <title>pango.Layout.set_width</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_width</methodname>
	  <methodparam><parameter
			 role="keyword">width</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">width</parameter>&nbsp;:</term>
	  <listitem><simpara>the desired width, or -1 to indicate that no
wrapping should be performed.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>set_width</methodname>() method sets the wrap
width for the lines of the <link
linkend="class-pangolayout"><classname>pango.Layout</classname></link> to
the value specified by <parameter>width</parameter>. If the value of
<parameter>width</parameter> is -1 no wrapping should be performed.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--get-width">
      <title>pango.Layout.get_width</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_width</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the width</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_width</methodname>() method returns the
width at which the lines of the <link
linkend="class-pangolayout"><classname>pango.Layout</classname></link>
should be wrapped.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--set-wrap">
      <title>pango.Layout.set_wrap</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_wrap</methodname>
	  <methodparam><parameter
			 role="keyword">wrap</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">wrap</parameter>&nbsp;:</term>
	  <listitem><simpara>the wrap mode</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>set_wrap</methodname>() method sets the wrap
style to the value specified by <parameter>wrap</parameter>. The value of
wrap must be one of:</para>

      <variablelist>
	<varlistentry>
	  <term><literal>pango.WRAP_WORD</literal></term>
	  <listitem>
	    <simpara>Wrap lines at word boundaries.</simpara>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><literal>pango.WRAP_WORD_CHAR</literal></term>
	  <listitem>
	    <simpara>wrap lines at word boundaries, but fall back to character
	    boundaries if there is not enough space for a full word.</simpara>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><literal>pango.WRAP_CHAR</literal></term>
	  <listitem>
	    <simpara>Wrap lines at character boundaries.</simpara>
	  </listitem>
	</varlistentry>
      </variablelist>

      <para>The wrap style is in effect if a width is set on the layout with
the <link
linkend="method-pangolayout--set-width"><function>pango.Layout.set_width()</function></link>. 
To turn off wrapping, set the width to -1.</para>

    </refsect2>

  <refsect2 id="method-pangolayout--get-wrap">
      <title>pango.Layout.get_wrap</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_wrap</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>Active wrap mode.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_wrap</methodname>() method returns the value
of the wrap mode for the layout. See the <link
linkend="method-pangolayout--set-wrap"><methodname>set_wrap</methodname>()</link> 
method for more information.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--set-indent">
      <title>pango.Layout.set_indent</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_indent</methodname>
	  <methodparam><parameter
			 role="keyword">indent</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">indent</parameter>&nbsp;:</term>
	  <listitem><simpara>the amount by which to
indent</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>set_indent</methodname>() method sets the
indentation of the first line of the layout to the value specified by
<parameter>indent</parameter>. The value of <parameter>indent</parameter>
may be negative to provide a hanging indent.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--get-indent">
      <title>pango.Layout.get_indent</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_indent</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the indent</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_indent</methodname>() method returns the
amount of indentation of the first line of the layout.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--set-spacing">
      <title>pango.Layout.set_spacing</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_spacing</methodname>
	  <methodparam><parameter
			 role="keyword">spacing</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">spacing</parameter>&nbsp;:</term>
	  <listitem><simpara>the amount of spacing (in 1/<literal>pango.SCALE</literal> of a
device unit)</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>set_spacing</methodname>() method sets the
amount of spacing between the lines of the layout to the value specified by
<parameter>spacing</parameter>.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--get-spacing">
      <title>pango.Layout.get_spacing</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_spacing</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the spacing (in 1/<literal>pango.SCALE</literal> of a device
unit)</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_spacing</methodname>() method returns the
amount of spacing between the lines of the layout.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--set-justify">
      <title>pango.Layout.set_justify</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_justify</methodname>
	  <methodparam><parameter
			 role="keyword">justify</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">justify</parameter>&nbsp;:</term>
	  <listitem><simpara>if <literal>True</literal> the lines in the
layout should be justified.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>set_justify</methodname>() method sets the
justification attribute to the value of <parameter>justify</parameter>. If
<parameter>justify</parameter> is <literal>True</literal> each complete line
should be stretched to fill the entire width of the layout. This stretching
is typically done by adding whitespace, but for some scripts (such as
Arabic), the justification is done by extending the characters.</para>

    </refsect2>

  <refsect2 id="method-pangolayout--get-justify">
      <title>pango.Layout.get_justify</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_justify</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara><literal>True</literal> if justification will
be used</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_justify</methodname>() method returns
<literal>True</literal> if each complete line should be stretched to fill
the entire width of the layout.</para>

    </refsect2>

  <refsect2 id="method-pangolayout--set-alignment">
      <title>pango.Layout.set_alignment</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_alignment</methodname>
	  <methodparam><parameter
			 role="keyword">alignment</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter
role="keyword">alignment</parameter>&nbsp;:</term>
	  <listitem><simpara>the new alignment</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>set_alignment</methodname>() method sets the
alignment (how partial lines are positioned within the
horizontal space available) for the layout to the value specified by
<parameter>alignment</parameter>. The value of
<parameter>alignment</parameter> must be one of:</para>

      <variablelist>
	<varlistentry>
	  <term><literal>pango.ALIGN_LEFT</literal></term>
	  <listitem>
	    <simpara>Put all available space on the right</simpara>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><literal>pango.ALIGN_CENTER</literal></term>
	  <listitem>
	    <simpara>Center the line within the available space</simpara>
	  </listitem>
	</varlistentry>
	<varlistentry>
	  <term><literal>pango.ALIGN_RIGHT</literal></term>
	  <listitem>
	    <simpara>Put all available space on the left</simpara>
	  </listitem>
	</varlistentry>
      </variablelist>

      <para></para>

    </refsect2>

    <refsect2 id="method-pangolayout--get-alignment">
      <title>pango.Layout.get_alignment</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_alignment</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the alignment value</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_alignment</methodname>() method returns the
alignment (how partial lines are positioned within the
horizontal space available) for the layout. See the <link
linkend="method-pangolayout--set-alignment"><methodname>set_alignment</methodname>()</link> 
method for more information.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--set-tabs">
      <title>pango.Layout.set_tabs</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_tabs</methodname>
	  <methodparam><parameter
			 role="keyword">tabs</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">tabs</parameter>&nbsp;:</term>
	  <listitem><simpara>a <link
linkend="class-pangotabarray"><classname>pango.TabArray</classname></link></simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>set_tabs</methodname>() method sets the tabs to
the value specified by <parameter>tabs</parameter> thereby overriding the
default tabs (every 8 spaces). If <parameter>tabs</parameter> is
<literal>None</literal>, the default tabs are reinstated.</para>

    </refsect2>

  <refsect2 id="method-pangolayout--get-tabs">
      <title>pango.Layout.get_tabs</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_tabs</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a copy of the tabs for this layout, or
<literal>None</literal></simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_tabs</methodname>() method returns the
current <link
linkend="class-pangotabarray"><classname>pango.TabArray</classname></link>
used by this layout. If no <link
linkend="class-pangotabarray"><classname>pango.TabArray</classname></link>
has been set, then the default tabs (every 8 spaces) are in use and
<literal>None</literal> is returned</para>

    </refsect2>

    <refsect2 id="method-pangolayout--set-single-paragraph-mode">
      <title>pango.Layout.set_single_paragraph_mode</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_single_paragraph_mode</methodname>
	  <methodparam><parameter
			 role="keyword">setting</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">setting</parameter>&nbsp;:</term>
	  <listitem><simpara>if <literal>True</literal> newlines, etc. are
not treated as paragraph separators.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>set_single_paragraph_mode</methodname>() method
sets the single paragraph mode attribute to the value specified by
<parameter>setting</parameter>. If <parameter>setting</parameter> is
<literal>True</literal>, do not treat newlines and similar characters as
paragraph separators; instead, keep all text in a single paragraph, and
display a glyph for paragraph separator characters. Used when you want to
allow editing of newlines on a single text line.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--get-single-paragraph-mode">
      <title>pango.Layout.get_single_paragraph_mode</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_single_paragraph_mode</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara><literal>True</literal> if the layout does not
break paragraphs at paragraph separator characters</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_single_paragraph_mode</methodname>() method
returns the value set by the <link
linkend="method-pangolayout--set-single-paragraph-mode"><methodname>set_single_paragraph_mode</methodname>()</link> 
method.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--context-changed">
      <title>pango.Layout.context_changed</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>context_changed</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>

      <para>The <methodname>context_changed</methodname>() method forces
recomputation of any state in the <link
linkend="class-pangolayout"><classname>pango.Layout</classname></link> that
might depend on the layout's context. This method should be called if you
make changes to the <link
linkend="class-pangocontext"><classname>pango.Context</classname></link>
subsequent to creating the layout.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--index-to-pos">
      <title>pango.Layout.index_to_pos</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>index_to_pos</methodname>
	  <methodparam><parameter
			 role="keyword">index</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">index</parameter>&nbsp;:</term>
	  <listitem><simpara>byte index within the
layout</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a 4-tuple representing the grapheme's
position</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>index_to_pos</methodname>() method converts from
the specified <parameter>index</parameter> within a <link
linkend="class-pangolayout"><classname>pango.Layout</classname></link> to
the onscreen position corresponding to the grapheme at that index, which is
represented as a 4-tuple (x, y, width, height).  Note that
<literal>x</literal> is always the leading edge of the grapheme and
<literal>x + width</literal> the trailing edge of the grapheme. If the
directionality of the grapheme is right-to-left, then
<literal>width</literal> will be negative.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--get-cursor-pos">
      <title>pango.Layout.get_cursor_pos</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_cursor_pos</methodname>
	  <methodparam><parameter
			 role="keyword">index</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">index</parameter>&nbsp;:</term>
	  <listitem><simpara>the byte index of the
cursor</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a 2-tuple containing two 4-tuples representing
the strong and weak cursor positions</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_cursor_pos</methodname>() method returns a
2-tuple containing two 4-tuples representing the strong and weak cursor
positions of the specified <parameter>index</parameter> within a layout. The
position of each cursor is stored as a zero-width rectangle represented by a
4-tuple (<literal>x</literal>, <literal>y</literal>,
<literal>width</literal>, <literal>height</literal>). The strong cursor
location is the location where characters of the directionality equal to the
base direction of the layout are inserted.  The weak cursor location is the
location where characters of the directionality opposite to the base
direction of the layout are inserted.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--move-cursor-visually">
      <title>pango.Layout.move_cursor_visually</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>move_cursor_visually</methodname>
	  <methodparam><parameter
			 role="keyword">strong</parameter></methodparam>
	  <methodparam><parameter
			 role="keyword">old_index</parameter></methodparam>
	  <methodparam><parameter
			 role="keyword">old_trailing</parameter></methodparam>
	  <methodparam><parameter
			 role="keyword">direction</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">strong</parameter>&nbsp;:</term>
	  <listitem><simpara>if <literal>True</literal> the moving cursor is
the strong cursor; otherwise, the weak cursor. The strong cursor is the
cursor corresponding to text insertion in the base direction for the
layout.</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter
role="keyword">old_index</parameter>&nbsp;:</term>
	  <listitem><simpara>the byte index of the grapheme for the old
index</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter
role="keyword">old_trailing</parameter>&nbsp;:</term>
	  <listitem><simpara>if 0, the cursor was at the trailing edge of
the grapheme indicated by <parameter>old_index</parameter>, if > 0, the
cursor was at the leading edge.</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter
role="keyword">direction</parameter>&nbsp;:</term>
	  <listitem><simpara>direction to move cursor. A negative value
indicates motion to the left.</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a 2-tuple containing: the new cursor byte index
(a value of -1 indicates that the cursor has been moved off the beginning of
the layout while a value of G_MAXINT indicates that the cursor has been
moved off the end of the layout); and, the number of characters to move
forward (from the new cursor position) to get the position where the cursor
should be displayed.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>move_cursor_visually</methodname>() returns a
2-tuple containing:</para>

      <itemizedlist>
	<listitem>
	  <simpara>a new cursor position calculated from an old position
(specified by <parameter>old_index</parameter>) and the specified
<parameter>direction</parameter> to move visually</simpara>
	</listitem>
	<listitem>
	  <simpara>the number of characters to move forward (from the new
cursor position) to get the position where the cursor should be displayed.
This allows distinguishing the position at the beginning of one line from
the position at the end of the preceding line. the first value is always on
the line where the cursor should be displayed.</simpara>
	</listitem>
      </itemizedlist>

      <para>If <parameter>direction</parameter> is positive, then the new
strong cursor position will be one position to the right of the old cursor
position. If <parameter>direction</parameter> is negative then the new
strong cursor position will be one position to the left of the old cursor
position.</para>

      <para>In the presence of bidirectional text, the correspondence
between logical and visual order will depend on the direction of the current
run, and there may be jumps when the cursor is moved off of the end of a
run.</para>

      <para>Motion here is in cursor positions, not in characters, so a
single call to the <methodname>move_cursor_visually</methodname>() method
may move the cursor over multiple characters when multiple characters
combine to form a single grapheme.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--xy-to-index">
      <title>pango.Layout.xy_to_index</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>xy_to_index</methodname>
	  <methodparam><parameter role="keyword">x</parameter></methodparam>
	  <methodparam><parameter role="keyword">y</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">x</parameter>&nbsp;:</term>
	  <listitem><simpara>the X offset (in 1/<literal>pango.SCALE</literal> of a device unit)
from the left edge of the layout.</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter role="keyword">y</parameter>&nbsp;:</term>
	  <listitem><simpara>the Y offset (in 1/<literal>pango.SCALE</literal> of a device unit)
from the top edge of the layout</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a 2-tuple containing the calculated byte index
and an integer indicating where in the grapheme the user clicked (it will
either be zero, or the number of characters in the grapheme - 0 represents
the trailing edge of the grapheme).</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>xy_to_index</methodname>() method returns the
byte index of the character at the specified <parameter>x</parameter> and
<parameter>y</parameter> position within a layout. If the position is not
inside the layout, the closest position is chosen (the
(<parameter>x</parameter>, <parameter>y</parameter>) position will be
clamped inside the layout).</para>

    </refsect2>

    <refsect2 id="method-pangolayout--get-extents">
      <title>pango.Layout.get_extents</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_extents</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a 2-tuple containing two 4-tuples representing
the as drawn and logical extents rectangles of the layout
</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_extents</methodname>() method returns a
2-tuple containing two 4-tuples representing the ink and logical extents
rectangles of the layout in device units (one pixel =
<literal>pango.SCALE</literal> device units). Logical extents are usually
what you want for positioning things. The extents are given in layout
coordinates which begin at the top left corner of the layout.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--get-pixel-extents">
      <title>pango.Layout.get_pixel_extents</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_pixel_extents</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a 2-tuple containing two 4-tuples representing
the as drawn (ink) and logical extents rectangles of the
layout</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_pixel_extents</methodname>() method returns
a 2-tuple containing two 4-tuples representing the logical and ink extents
rectangles of the layout in pixel units. See the <link
linkend="method-pangolayout--get-extents"><methodname>get_extents</methodname>()</link> 
method for more information. This method just calls the <link
linkend="method-pangolayout--get-extents"><methodname>get_extents</methodname>()</link> 
and then converts the extents to pixels (one pixel =
<literal>pango.SCALE</literal> device units).</para>

    </refsect2>

    <refsect2 id="method-pangolayout--get-size">
      <title>pango.Layout.get_size</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_size</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a 2-tuple containing the logical width and
height of the <link
linkend="class-pangolayout"><classname>pango.Layout</classname></link></simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_size</methodname>() method returns a 2-tuple
containing the logical width and height of the <link
linkend="class-pangolayout"><classname>pango.Layout</classname></link> in
pango device units (one pixel = <literal>pango.SCALE</literal> device
units).</para>

    </refsect2>

    <refsect2 id="method-pangolayout--get-pixel-size">
      <title>pango.Layout.get_pixel_size</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_pixel_size</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a 2-tuple containing the logical width height
of the <link
linkend="class-pangolayout"><classname>pango.Layout</classname></link></simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_pixel_size</methodname>() method returns a
2-tuple containing the logical width and height of the  <link
linkend="class-pangolayout"><classname>pango.Layout</classname></link> in
pixels (one pixel = <literal>pango.SCALE</literal> device units). (The <link
linkend="method-pangolayout--get-size"><methodname>get_size</methodname>()</link> 
returns the width and height in device units.)</para>

    </refsect2>

    <refsect2 id="method-pangolayout--get-line-count">
      <title>pango.Layout.get_line_count</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_line_count</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the line count</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_line_count</methodname>() method returns the
count of lines in the layout.</para>

    </refsect2>

    <refsect2 id="method-pangolayout--get-line">
      <title>pango.Layout.get_line</title>

      <programlisting><methodsynopsis language="python">
          <methodname>get_line</methodname>
          <methodparam><parameter role="keyword">line</parameter></methodparam>
        </methodsynopsis></programlisting>
      <variablelist>
        <varlistentry>
          <term><parameter role="keyword">line</parameter>&nbsp;:</term>
          <listitem><simpara>the index of a line, which must be between 0 and
layout.get_line_count() - 1, inclusive.</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>the requested <link
linkend="class-pangolayoutline"><classname>pango.LayoutLine</classname></link>,
 or <literal>None</literal> if the index is out of range.</simpara></listitem>
        </varlistentry>
      </variablelist>

      <note>
        <para>This method is available in PyGTK 2.8 and above.</para>
      </note>

      <para>The <methodname>get_line</methodname>() method returns the line
with the index number specified by <parameter>line</parameter> from the
layout. The returned layout line will become invalid if changes are made to
the <link
linkend="class-pangolayout"><classname>pango.Layout</classname></link>.</para>

    </refsect2>

 <!-- NOT IMPLEMENTED
  <refsect2 id="method-pangolayout- -get-lines">
    <title>pango.Layout.get_lines</title>

<programlisting><methodsynopsis language="python">
    <methodname>get_lines</methodname>
    <methodparam></methodparam>  </methodsynopsis></programlisting>
  <variablelist>
    <varlistentry>
      <term><emphasis>Returns</emphasis>&nbsp;:</term>
      <listitem><simpara>a <literal>GSList</literal> containing the lines in the layout. This
points to internal data of the <link linkend="class-pangolayout"><classname>pango.Layout</classname></link> and must be used with
care. It will become invalid on any change to the layout's
text or properties.</simpara></listitem>
    </varlistentry>
  </variablelist>
<para>
Return the lines of the <parameter>layout</parameter> as a list.
</para>  </refsect2>
END NOT IMPLEMENTED -->

    <refsect2 id="method-pangolayout--get-iter">
      <title>pango.Layout.get_iter</title>

      <programlisting><methodsynopsis language="python">
          <methodname>get_iter</methodname>
          <methodparam></methodparam>
        </methodsynopsis></programlisting>
      <variablelist>
        <varlistentry>
          <term><emphasis>Returns</emphasis>&nbsp;:</term>
          <listitem><simpara>a new <link
linkend="class-pangolayoutiter"><classname>pango.LayoutIter</classname></link>
object</simpara></listitem>
        </varlistentry>
      </variablelist>

      <note>
        <para>This method is available in PyGTK 2.6 and above.</para>
      </note>

      <para>The <methodname>get_iter</methodname>() method returns a <link
linkend="class-pangolayoutiter"><classname>pango.LayoutIter</classname></link>
object that can be used to iterate over the visual extents of the
layout.</para>

    </refsect2>

  </refsect1>

</refentry>
