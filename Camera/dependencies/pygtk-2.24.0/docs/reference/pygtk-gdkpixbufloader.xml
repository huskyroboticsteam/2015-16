<?xml version="1.0" standalone="no"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.1.2//EN"
    "http://www.oasis-open.org/docbook/xml/4.1.2/docbookx.dtd">

<refentry id="class-gdkpixbufloader">
  <refnamediv>
    <refname>gtk.gdk.PixbufLoader</refname>
    <refpurpose>an object providing application-driven progressive image
loading</refpurpose>
  </refnamediv>

  <refsect1>
    <title>Synopsis</title>

    <classsynopsis language="python">
      <ooclass><classname>gtk.gdk.PixbufLoader</classname></ooclass>
      <ooclass><classname><link
linkend="class-gobject">gobject.GObject</link></classname></ooclass>
      <constructorsynopsis language="python">
	<methodname><link
linkend="constructor-gdkpixbufloader">gtk.gdk.PixbufLoader</link></methodname>
	<methodparam><parameter
		       role="keyword">image_type</parameter>
	  <initializer>None</initializer></methodparam>
      </constructorsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-gdkpixbufloader--write">write</link></methodname>
	<methodparam><parameter role="keyword">buf</parameter></methodparam>
	<methodparam><parameter
		       role="keyword">count</parameter>
	  <initializer>-1</initializer></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-gdkpixbufloader--get-pixbuf">get_pixbuf</link></methodname>
	<methodparam></methodparam>  </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-gdkpixbufloader--get-animation">get_animation</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link
linkend="method-gdkpixbufloader--close">close</link></methodname>
      </methodsynopsis>
 <methodsynopsis language="python">
	<methodname><link linkend="method-gdkpixbufloader--set-size">set_size</link></methodname>
	<methodparam><parameter
		       role="keyword">width</parameter></methodparam>
	<methodparam><parameter
		       role="keyword">height</parameter></methodparam>
      </methodsynopsis>
      <methodsynopsis language="python">
	<methodname><link linkend="method-gdkpixbufloader--get-format">get_format</link></methodname>
	<methodparam></methodparam>
      </methodsynopsis>
   </classsynopsis>

    <programlisting>
<emphasis role="bold">Functions</emphasis>

<methodsynopsis language="python">
	<methodname><link linkend="function-gdk--pixbuf-loader-new-with-mime-type">gtk.gdk.pixbuf_loader_new_with_mime_type</link></methodname>
	<methodparam><parameter role="keyword">mime_type</parameter></methodparam>
      </methodsynopsis></programlisting>

  </refsect1>

  <refsect1>
    <title>Ancestry</title>

<synopsis>+-- <link linkend="class-gobject">gobject.GObject</link>
  +-- <link linkend="class-gdkpixbufloader">gtk.gdk.PixbufLoader</link>
</synopsis>

  </refsect1>

  <refsect1>
    <title>Signal Prototypes</title>

    <variablelist>
      <varlistentry>
        <term>"<link linkend="signal-gdkpixbufloader--area-prepared">area-prepared</link>"</term>
        <listitem>
          <methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>pixbufloader</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"<link linkend="signal-gdkpixbufloader--area-updated">area-updated</link>"</term>
        <listitem>
          <methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>pixbufloader</parameter></methodparam>
            <methodparam><parameter>x</parameter></methodparam>
            <methodparam><parameter>y</parameter></methodparam>
            <methodparam><parameter>width</parameter></methodparam>
            <methodparam><parameter>height</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"<link linkend="signal-gdkpixbufloader--closed">closed</link>"</term>
        <listitem>
          <methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>pixbufloader</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis>
        </listitem>
      </varlistentry>
      <varlistentry>
        <term>"<link linkend="signal-gdkpixbufloader--size-prepared">size-prepared</link>"</term>
        <listitem>
          <methodsynopsis language="python"><methodname>callback</methodname>
            <methodparam><parameter>pixbufloader</parameter></methodparam>
            <methodparam><parameter>width</parameter></methodparam>
            <methodparam><parameter>height</parameter></methodparam>
            <methodparam><parameter>user_param1</parameter></methodparam>
            <methodparam><parameter>...</parameter></methodparam>
          </methodsynopsis>
        </listitem>
      </varlistentry>
    </variablelist>

  </refsect1>

  <refsect1>
    <title>Description</title>

    <para>A <link
linkend="class-gdkpixbufloader"><classname>gtk.gdk.PixbufLoader</classname></link> 
provides a way for applications to drive the process of loading an image, by
letting them send the image data directly to the loader instead of having
the loader read the data from a file. Applications can use this instead of
the <link
linkend="function-gdk--pixbuf-new-from-file"><function>gtk.gdk.pixbuf_new_from_file</function></link> function 
or the <link
linkend="constructor-gdkpixbufanimation"><function>gtk.gdk.PixbufAnimation</function></link> 
constructor when they need to parse image data in small chunks. For example,
it should be used when reading an image from a (potentially) slow network
connection, or when loading an extremely large file.</para>

    <para>To use <link
linkend="class-gdkpixbufloader"><classname>gtk.gdk.PixbufLoader</classname></link> 
to load an image, just create a new one, and call the <link
linkend="method-gdkpixbufloader--write"><methodname>write</methodname>()</link> 
method to send the data to it. When done, the <link
linkend="method-gdkpixbufloader--close"><methodname>close</methodname>()</link> 
method should be called to end the stream and finalize everything. The
loader will emit two important signals throughout the process. The first,
"area-prepared", will be called as soon as the image has enough information
to determine the size of the image to be used. The application can call the
<link
linkend="method-gdkpixbufloader--get-pixbuf"><methodname>get_pixbuf</methodname>()</link> 
method to retrieve the pixbuf. No actual image data will be in the pixbuf,
so it can be safely filled with any temporary graphics (or an initial color)
as needed.</para>

    <para>The "area-updated" signal is emitted every time a region is
updated. This way you can update a partially completed image. Note that you
do not know anything about the completeness of an image from the area
updated. For example, in an interlaced image, you need to make several
passes before the image is done loading.</para>

    <refsect2>
      <title>Loading an Animation</title>

      <para>Loading an animation is almost as easy as loading an image. Once
the first "area-prepared" signal has been emitted, you can call the <link
linkend="method-gdkpixbufloader--get-animation"><methodname>get_animation</methodname>()</link>
method to get the <link
linkend="class-gdkpixbufanimation"><classname>gtk.gdk.PixbufAnimation</classname></link>
object and the <link
linkend="method-gdkpixbufanimation--get-iter"><methodname>gtk.gdk.PixbufAnimation.get_iter</methodname>()</link>
method to get an <link
linkend="class-gdkpixbufanimationiter"><classname>gtk.gdk.PixbufAnimationIter</classname></link>
for displaying it.</para>

    </refsect2>

  </refsect1>

  <refsect1 id="constructor-gdkpixbufloader">
    <title>Constructor</title>

    <programlisting><constructorsynopsis language="python">
	<methodname>gtk.gdk.PixbufLoader</methodname>
	<methodparam><parameter role="keyword">image_type</parameter>
	  <initializer>None</initializer></methodparam>
      </constructorsynopsis></programlisting>
    <variablelist>
      <varlistentry>
	<term><parameter role="keyword">image_type</parameter>&nbsp;:</term>
	<listitem><simpara>the name of the image format or
<literal>None</literal></simpara></listitem>
      </varlistentry>
      <varlistentry>
	<term><emphasis>Returns</emphasis>&nbsp;:</term>
	<listitem><simpara>A new <link
linkend="class-gdkpixbufloader"><classname>gtk.gdk.PixbufLoader</classname></link> 
object.</simpara></listitem>
      </varlistentry>
    </variablelist>

    <para>Creates a new <link
linkend="class-gdkpixbufloader"><classname>gtk.gdk.PixbufLoader</classname></link>
object. If <parameter>image_type</parameter> is not specified or is
<literal>None</literal> the image type will be automatically deduced from
the image data. If <parameter>image_type</parameter> is specified the <link
linkend="class-gdkpixbufloader"><classname>gtk.gdk.PixbufLoader</classname></link>
attempts to parse the image data as if it were an image of the specified
type. Identifying the image type is useful if you want an error if the image
isn't the expected type, for loading image formats that can't be reliably
identified by looking at the data, or if the user manually forces a specific
type.</para>

    <para>This constructor raises the GError exception if an error occurs
trying to load the module for <parameter>image_type</parameter>.</para>

  </refsect1>

  <refsect1>
    <title>Methods</title>

    <refsect2 id="method-gdkpixbufloader--write">
      <title>gtk.gdk.PixbufLoader.write</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>write</methodname>
	  <methodparam><parameter
			 role="keyword">buf</parameter></methodparam>
	  <methodparam><parameter
			 role="keyword">count</parameter>
	  <initializer>-1</initializer></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">buf</parameter>&nbsp;:</term>
	  <listitem><simpara>a string containing some portion of the image
data.</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter role="keyword">count</parameter>&nbsp;:</term>
	  <listitem><simpara>the length of <parameter>buf</parameter> in
bytes.</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara><literal>True</literal> if the write was
successful.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>write</methodname>() method causes the pixbuf
loader to parse the bytes of an image contained in the string specified by
<parameter>buf</parameter>. If <parameter>count</parameter> is specified and
is in the range (0, len(buf)) only <parameter>count</parameter> bytes of
<parameter>buf</parameter> are used. This method returns
<literal>True</literal> if the image data was loaded successfully. If an
error occurred this method raises the GError exception and will not accept
further writes. The loader may or may not be closed depending on the
error.</para>

    </refsect2>

    <refsect2 id="method-gdkpixbufloader--get-pixbuf">
      <title>gtk.gdk.PixbufLoader.get_pixbuf</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_pixbuf</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the <link
linkend="class-gdkpixbuf"><classname>gtk.gdk.Pixbuf</classname></link> that
the loader is creating, or <literal>None</literal> if not enough data has
been read to determine how to create the image buffer.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_pixbuf</methodname>() method returns the
<link linkend="class-gdkpixbuf"><classname>gtk.gdk.Pixbuf</classname></link>
that a pixbuf loader is currently creating. In general it only makes sense
to call this method after the "area-prepared" signal has been emitted by
the loader which means that enough data has been read to know the size of
the image that will be allocated. If the loader has not received enough data
via the <link
linkend="method-gdkpixbufloader--write"><methodname>write</methodname>()</link> 
method, this method returns <literal>None</literal>. The same pixbuf will be
returned in all future calls to this method. Also, if the loader is an
animation, it will return the "static image" of the animation (see the <link
linkend="method-gdkpixbufanimation--get-static-image"><methodname>gtk.gdk.PixbufAnimation.get_static_image</methodname>()</link> 
method).</para>

    </refsect2>

    <refsect2 id="method-gdkpixbufloader--get-animation">
      <title>gtk.gdk.PixbufLoader.get_animation</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_animation</methodname>
	  <methodparam></methodparam>  </methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>the <link
linkend="class-gdkpixbufanimation"><classname>gtk.gdk.PixbufAnimation</classname></link> 
that the loader is loading, or <literal>None</literal> if not enough data
has been read to determine the information.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>get_animation</methodname>() method returns the
<link
linkend="class-gdkpixbufanimation"><classname>gtk.gdk.PixbufAnimation</classname></link> 
that the pixbuf loader is currently creating. In general it only makes sense
to call this method after the "area-prepared" signal has been emitted by the
loader. If the loader doesn't have enough bytes yet (hasn't emitted the
"area-prepared" signal) this method will return
<literal>None</literal>.</para>

    </refsect2>

    <refsect2 id="method-gdkpixbufloader--close">
      <title>gtk.gdk.PixbufLoader.close</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>close</methodname>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara><literal>True</literal> if all image data
written so far was successfully passed out via the "area_update"
signal</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The <methodname>close</methodname>() method informs the pixbuf
loader that no further writes using the <link
linkend="method-gdkpixbufloader--write"><methodname>write</methodname>()</link>
will occur, so that it can free its internal loading structures. Also, the
pixbuf loader tries to parse any data that hasn't yet been parsed and if the
remaining data is partial or corrupt, the GError exception will be
raised.</para>

    </refsect2>

    <refsect2 id="method-gdkpixbufloader--set-size">
      <title>gtk.gdk.PixbufLoader.set_size</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>set_size</methodname>
	  <methodparam><parameter
		       role="keyword">width</parameter></methodparam>
	  <methodparam><parameter
		       role="keyword">height</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter
		       role="keyword">width</parameter>&nbsp;:</term>
	  <listitem><simpara>The desired width for the image being
	  loaded.</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter
		       role="keyword">height</parameter>&nbsp;:</term>
	  <listitem><simpara>The desired height for the image being
	  loaded.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>set_size</methodname>() method causes the image
to be scaled to the size specified by <parameter>width</parameter> and
<parameter>height</parameter> while it is being loaded. The desired image
size can be determined relative to the original size of the image by calling
the <link
linkend="method-gdkpixbufloader--set-size"><methodname>set_size()</methodname></link>
from a signal handler for the "<link
linkend="signal-gdkpixbufloader--size-prepared">size-prepared</link>"
signal.</para>

      <para>Attempts to set the desired image size are ignored after the
emission of the "<link
linkend="signal-gdkpixbufloader--size-prepared">size-prepared</link>".</para>

    </refsect2>

    <refsect2 id="method-gdkpixbufloader--get-format">
      <title>gtk.gdk.PixbufLoader.get_format</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>get_format</methodname>
	  <methodparam></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a Python dict containing the image format
	  information or <literal>None</literal></simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This method is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The <methodname>get_format</methodname>() method returns the
available information about the format of the currently loading image
file. This method returns None if their is no information available
e.g. before the image has started loading.</para>

    </refsect2>

  </refsect1>

  <refsect1>
    <title>Functions</title>

    <refsect2 id="function-gdk--pixbuf-loader-new-with-mime-type">
      <title>gtk.gdk.pixbuf_loader_new_with_mime_type</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>gtk.gdk.pixbuf_loader_new_with_mime_type</methodname>
	  <methodparam><parameter
			 role="keyword">mime_type</parameter></methodparam>
	</methodsynopsis></programlisting>
      <variablelist>
	<varlistentry>
	  <term><parameter role="keyword">mime_type</parameter>&nbsp;:</term>
	  <listitem><simpara> the mime type to be loaded</simpara></listitem>
	</varlistentry>
	<varlistentry>
	<term><emphasis>Returns</emphasis>&nbsp;:</term>
	  <listitem><simpara>a new <link
	  linkend="class-gdkpixbufloader"><classname>gtk.gdk.PixbufLoader</classname></link>
	  object.</simpara></listitem>
	</varlistentry>
      </variablelist>

      <note>
	<para>This function is available in PyGTK 2.4 and above.</para>
      </note>

      <para>The
<function>gtk.gdk.pixbuf_loader_new_with_mime_type</function>() function
creates a new pixbuf loader object that always attempts to parse image data
as if it were an image of the mime type specified by
<parameter>mime_type</parameter>, instead of identifying the type
automatically. Useful if you want an error if the image isn't the expected
mime type, for loading image formats that can't be reliably identified by
looking at the data, or if the user manually forces a specific mime
type.</para>

      <para>This function raises the GError exception if an error occurs
during the loading of the mime type image module.</para>

    </refsect2>

  </refsect1>

  <refsect1>
    <title>Signals</title>

    <refsect2 id="signal-gdkpixbufloader--area-prepared">
      <title>The "area-prepared" gtk.gdk.PixbufLoader Signal</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>callback</methodname>
	  <methodparam><parameter>pixbufloader</parameter></methodparam>
	  <methodparam><parameter>user_param1</parameter></methodparam>
	  <methodparam><parameter>...</parameter></methodparam>
	</methodsynopsis></programlisting>

      <variablelist>
	<varlistentry>
	  <term><parameter>pixbufloader</parameter>&nbsp;:</term>
	  <listitem><simpara>the pixbufloader that received the
signal</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>user_param1</parameter>&nbsp;:</term>
          <listitem><simpara>the first user parameter (if any) specified
with the <link
linkend="method-gobject--connect"><methodname>connect</methodname>()</link>
method</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>...</parameter>&nbsp;:</term>
	  <listitem><simpara>additional user parameters (if
any)</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The "area-prepared" signal is emitted when sufficient image data
has been received and parsed to determine the size of the image.</para>

    </refsect2>

    <refsect2 id="signal-gdkpixbufloader--area-updated">
      <title>The "area-updated" gtk.gdk.PixbufLoader Signal</title>

      <programlisting><methodsynopsis language="python">
	  <methodname>callback</methodname>
	  <methodparam><parameter>pixbufloader</parameter></methodparam>
	  <methodparam><parameter>x</parameter></methodparam>
	  <methodparam><parameter>y</parameter></methodparam>
	  <methodparam><parameter>width</parameter></methodparam>
	  <methodparam><parameter>height</parameter></methodparam>
	  <methodparam><parameter>user_param1</parameter></methodparam>
	  <methodparam><parameter>...</parameter></methodparam>
	</methodsynopsis></programlisting>

      <variablelist>
	<varlistentry>
	  <term><parameter>pixbufloader</parameter>&nbsp;:</term>
	  <listitem><simpara>the pixbufloader that received the
signal</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>x</parameter>&nbsp;:</term>
	  <listitem><simpara>the X coordinate of the
region</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>y</parameter>&nbsp;:</term>
	  <listitem><simpara>the Y coordinate of the
region</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>width</parameter>&nbsp;:</term>
	  <listitem><simpara>the width of the region</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>height</parameter>&nbsp;:</term>
	  <listitem><simpara>the height of the region</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>user_param1</parameter>&nbsp;:</term>
          <listitem><simpara>the first user parameter (if any) specified
with the <link
linkend="method-gobject--connect"><methodname>connect</methodname>()</link>
method</simpara></listitem>
	</varlistentry>
	<varlistentry>
	  <term><parameter>...</parameter>&nbsp;:</term>
	  <listitem><simpara>additional user parameters (if
any)</simpara></listitem>
	</varlistentry>
      </variablelist>

      <para>The "area-updated" signal is emitted when sufficient image data
has been received and parsed to allow the region specified by
<parameter>x</parameter>, <parameter>y</parameter>,
<parameter>width</parameter> and <parameter>height</parameter> to be
displayed.</para>

    </refsect2>

    <refsect2 id="signal-gdkpixbufloader--closed">
      <title>The "closed" gtk.gdk.PixbufLoader Signal</title>

      <programlisting><methodsynopsis language="python">
          <methodname>callback</methodname>
          <methodparam><parameter>pixbufloader</parameter></methodparam>
          <methodparam><parameter>user_param1</parameter></methodparam>
          <methodparam><parameter>...</parameter></methodparam>
        </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter>pixbufloader</parameter>&nbsp;:</term>
          <listitem><simpara>the pixbufloader that received the
signal</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>user_param1</parameter>&nbsp;:</term>
          <listitem><simpara>the first user parameter (if any) specified
with the <link
linkend="method-gobject--connect"><methodname>connect</methodname>()</link>
method</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>...</parameter>&nbsp;:</term>
          <listitem><simpara>additional user parameters (if
any)</simpara></listitem>
        </varlistentry>
      </variablelist>

      <para>The "closed" signal is emitted when the
<parameter>pixbufloader</parameter> is closed by calling the <link
linkend="method-gdkpixbufloader--close"><methodname>close</methodname>()</link>
method.</para>

    </refsect2>

    <refsect2 id="signal-gdkpixbufloader--size-prepared">
      <title>The "size-prepared" gtk.gdk.PixbufLoader Signal</title>

      <programlisting><methodsynopsis language="python">
          <methodname>callback</methodname>
          <methodparam><parameter>pixbufloader</parameter></methodparam>
          <methodparam><parameter>width</parameter></methodparam>
          <methodparam><parameter>height</parameter></methodparam>
          <methodparam><parameter>user_param1</parameter></methodparam>
          <methodparam><parameter>...</parameter></methodparam>
        </methodsynopsis></programlisting>

      <variablelist>
        <varlistentry>
          <term><parameter>pixbufloader</parameter>&nbsp;:</term>
          <listitem><simpara>the pixbufloader that received the
signal</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>width</parameter>&nbsp;:</term>
          <listitem><simpara>the original width of the
          image</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>height</parameter>&nbsp;:</term>
          <listitem><simpara>he original height of the
          image</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>user_param1</parameter>&nbsp;:</term>
          <listitem><simpara>the first user parameter (if any) specified
with the <link
linkend="method-gobject--connect"><methodname>connect</methodname>()</link>
method</simpara></listitem>
        </varlistentry>
        <varlistentry>
          <term><parameter>...</parameter>&nbsp;:</term>
          <listitem><simpara>additional user parameters (if
any)</simpara></listitem>
        </varlistentry>
      </variablelist>

      <note>
	<para>This signal is available in GTK+ 2.2 and above.</para>
      </note>

      <para>The "size-prepared" signal is emitted when the pixbuf loader has
been fed the initial amount of data that is required to figure out the size
of the image that it will create. Applications can call the <link
linkend="method-gdkpixbufloader--set-size"><methodname>set_size</methodname>()</link>
method in response to this signal to set the desired size of the
image.</para>

    </refsect2>

  </refsect1>

</refentry>
